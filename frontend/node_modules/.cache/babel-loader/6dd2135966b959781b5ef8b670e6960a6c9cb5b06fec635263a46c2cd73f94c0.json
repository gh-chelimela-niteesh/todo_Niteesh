{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cheli\\\\OneDrive\\\\Desktop\\\\Projects\\\\todo-frontend\\\\src\\\\components\\\\TodoApp.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import TodoForm from './TodoForm';\n// import TodoItem from './TodoItem';\n// import { useNavigate } from 'react-router-dom';\n\n// function TodoApp() {\n//   const [todos, setTodos] = useState([]);\n//   const [darkMode, setDarkMode] = useState(false);\n//   const [filter, setFilter] = useState(\"All\");\n//   const navigate = useNavigate();\n//   const user = JSON.parse(localStorage.getItem(\"user\"));\n//   const userEmail = user?.email;\n\n//   useEffect(() => {\n//     if (!userEmail) {\n//       navigate('/');\n//       return;\n//     }\n//     fetch(`http://localhost:8080/api/todos/${userEmail}`)\n//       .then((res) => res.json())\n//       .then((data) => setTodos(data))\n//       .catch((err) => {\n//         console.error('Failed to load todos:', err);\n//         alert('Failed to load todos.');\n//       });\n//   }, [userEmail, navigate]);\n\n//   const addTodo = (task) => {\n//     const newTodo = {\n//       text: task.text,\n//       priority: task.priority,\n//       dueDate: task.dueDate,\n//       completed: false,\n//     };\n\n//     fetch(`http://localhost:8080/api/todos/${userEmail}`, {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify(newTodo),\n//     })\n//       .then((res) => res.text())\n//       .then(() => {\n//         setTodos([...todos, { ...newTodo, id: Date.now() }]);\n//       });\n//   };\n\n//   const toggleComplete = (id) => {\n//     const todo = todos.find((t) => t.id === id);\n//     const updated = { ...todo, completed: !todo.completed };\n\n//     fetch(`http://localhost:8080/api/todos/${id}`, {\n//       method: 'PUT',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify(updated),\n//     }).then(() =>\n//       setTodos(todos.map((t) => (t.id === id ? updated : t)))\n//     );\n//   };\n\n//   const deleteTodo = (id) => {\n//     fetch(`http://localhost:8080/api/todos/${id}`, {\n//       method: 'DELETE',\n//     }).then(() => setTodos(todos.filter((t) => t.id !== id)));\n//   };\n\n//   const editTodo = (id, updatedTask) => {\n//     const updated = { ...todos.find((t) => t.id === id), ...updatedTask };\n\n//     fetch(`http://localhost:8080/api/todos/${id}`, {\n//       method: 'PUT',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify(updated),\n//     }).then(() =>\n//       setTodos(todos.map((t) => (t.id === id ? updated : t)))\n//     );\n//   };\n\n//   const filteredTodos = todos.filter((todo) => {\n//     if (filter === \"Completed\") return todo.completed;\n//     if (filter === \"Pending\") return !todo.completed;\n//     return true;\n//   });\n\n//   const completedCount = todos.filter((t) => t.completed).length;\n//   const pendingCount = todos.length - completedCount;\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('user');\n//     navigate('/');\n//   };\n//  useEffect(() => {\n//   const root = window.document.documentElement;\n//   if (darkMode) {\n//     root.classList.add('dark');\n//   } else {\n//     root.classList.remove('dark');\n//   }\n// }, [darkMode]);\n//   return (\n\n//       <div className=\"min-h-screen bg-gradient-to-r from-slate-100 to-slate-200 dark:from-gray-900 dark:to-gray-800 text-black dark:text-white transition-colors\">\n//         <div className=\"flex justify-between items-center p-4 max-w-xl mx-auto\">\n//           <button\n//             onClick={() => setDarkMode(!darkMode)}\n//             className=\"text-sm text-indigo-600 hover:underline\"\n//           >\n//             {darkMode ? \"☀️ Light Mode\" : \"🌙 Dark Mode\"}\n//           </button>\n//           <button\n//             onClick={handleLogout}\n//             className=\"text-red-600 text-sm font-medium hover:underline\"\n//           >\n//             Logout\n//           </button>\n//         </div>\n\n//         <div className=\"bg-white/30 backdrop-blur-lg rounded-2xl shadow-2xl w-full max-w-xl p-6 border border-slate-300 mx-auto\">\n//           <h1 className=\"text-3xl font-semibold text-center text-slate-800 dark:text-white mb-6\">🚀 Project Task Manager</h1>\n\n//           <TodoForm onSubmit={addTodo} />\n\n//           <div className=\"mb-4\">\n//             <select\n//               value={filter}\n//               onChange={(e) => setFilter(e.target.value)}\n//               className=\"px-4 py-2 rounded border border-gray-400 dark:bg-gray-700\"\n//             >\n//               <option>All</option>\n//               <option>Completed</option>\n//               <option>Pending</option>\n//             </select>\n//           </div>\n\n//           <div className=\"space-y-4\">\n//             {filteredTodos.map((todo) => (\n//               <TodoItem\n//                 key={todo.id}\n//                 todo={todo}\n//                 onToggle={toggleComplete}\n//                 onDelete={deleteTodo}\n//                 onEdit={editTodo}\n//               />\n//             ))}\n//           </div>\n\n//           <div className=\"mt-6 text-sm text-slate-700 dark:text-gray-200 flex justify-between\">\n//             <span>📋 Total: {todos.length}</span>\n//             <span>✅ Completed: {completedCount}</span>\n//             <span>⏳ Pending: {pendingCount}</span>\n//           </div>\n//         </div>\n//       </div>\n\n//   );\n// }\n\n// export default TodoApp;\nimport React, { useState, useEffect } from 'react';\nimport TodoForm from './TodoForm';\nimport TodoItem from './TodoItem';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoApp() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [darkMode, setDarkMode] = useState(false);\n  const [filter, setFilter] = useState(\"All\");\n  const [sortOrder, setSortOrder] = useState(\"none\");\n  const [searchText, setSearchText] = useState(\"\");\n  const navigate = useNavigate();\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const userEmail = user === null || user === void 0 ? void 0 : user.email;\n  useEffect(() => {\n    if (!userEmail) {\n      navigate('/');\n      return;\n    }\n    fetch(`http://localhost:8080/api/todos/${userEmail}`).then(res => res.json()).then(data => setTodos(data)).catch(err => {\n      console.error('Failed to load todos:', err);\n      alert('Failed to load todos.');\n    });\n  }, [userEmail, navigate]);\n  const addTodo = task => {\n    const newTodo = {\n      text: task.text,\n      priority: task.priority,\n      dueDate: task.dueDate,\n      completed: false\n    };\n    fetch(`http://localhost:8080/api/todos/${userEmail}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newTodo)\n    }).then(res => res.text()).then(() => {\n      setTodos([...todos, {\n        ...newTodo,\n        id: Date.now()\n      }]);\n    });\n  };\n  const toggleComplete = id => {\n    const todo = todos.find(t => t.id === id);\n    const updated = {\n      ...todo,\n      completed: !todo.completed\n    };\n    fetch(`http://localhost:8080/api/todos/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updated)\n    }).then(() => setTodos(todos.map(t => t.id === id ? updated : t)));\n  };\n  const deleteTodo = id => {\n    fetch(`http://localhost:8080/api/todos/${id}`, {\n      method: 'DELETE'\n    }).then(() => setTodos(todos.filter(t => t.id !== id)));\n  };\n  const editTodo = (id, updatedTask) => {\n    const updated = {\n      ...todos.find(t => t.id === id),\n      ...updatedTask\n    };\n    fetch(`http://localhost:8080/api/todos/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updated)\n    }).then(() => setTodos(todos.map(t => t.id === id ? updated : t)));\n  };\n  const priorityValue = p => {\n    if (p === \"Low\") return 1;\n    if (p === \"Moderate\") return 2;\n    return 3; // High\n  };\n  const filteredTodos = todos.filter(todo => {\n    const matchesFilter = filter === \"All\" || filter === \"Completed\" && todo.completed || filter === \"Pending\" && !todo.completed;\n    const matchesSearch = todo.text.toLowerCase().includes(searchText.toLowerCase());\n    return matchesFilter && matchesSearch;\n  }).sort((a, b) => {\n    if (sortOrder === \"lowToHigh\") return priorityValue(a.priority) - priorityValue(b.priority);\n    if (sortOrder === \"highToLow\") return priorityValue(b.priority) - priorityValue(a.priority);\n    return 0;\n  });\n  const completedCount = todos.filter(t => t.completed).length;\n  const pendingCount = todos.length - completedCount;\n  const handleLogout = () => {\n    localStorage.removeItem('user');\n    navigate('/');\n  };\n  useEffect(() => {\n    const root = window.document.documentElement;\n    if (darkMode) {\n      root.classList.add('dark');\n    } else {\n      root.classList.remove('dark');\n    }\n  }, [darkMode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-r from-slate-100 to-slate-200 dark:from-gray-900 dark:to-gray-800 text-black dark:text-white transition-colors\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center p-4 max-w-xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setDarkMode(!darkMode),\n        className: \"text-sm text-indigo-600 hover:underline\",\n        children: darkMode ? \"☀️ Light Mode\" : \"🌙 Dark Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"text-red-600 text-sm font-medium hover:underline\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white/30 backdrop-blur-lg rounded-2xl shadow-2xl w-full max-w-xl p-6 border border-slate-300 mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-semibold text-center text-slate-800 dark:text-white mb-6\",\n        children: \"\\uD83D\\uDE80 To - Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n        onSubmit: addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-2 items-center justify-between mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchText,\n          onChange: e => setSearchText(e.target.value),\n          placeholder: \"Search tasks...\",\n          className: \"px-3 py-2 rounded border border-gray-400 dark:bg-gray-700 dark:text-white w-full sm:w-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: sortOrder,\n          onChange: e => setSortOrder(e.target.value),\n          className: \"px-2 py-2 rounded border border-gray-400 dark:bg-gray-700 dark:text-white\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"none\",\n            children: \"Sort by Urgency\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"lowToHigh\",\n            children: \"Low \\u2192 High\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"highToLow\",\n            children: \"High \\u2192 Low\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setFilter('All'),\n            className: \"bg-slate-500 text-white px-3 py-1 rounded\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setFilter('Completed'),\n            className: \"bg-green-600 text-white px-3 py-1 rounded\",\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setFilter('Pending'),\n            className: \"bg-yellow-500 text-white px-3 py-1 rounded\",\n            children: \"Pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: filteredTodos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n          todo: todo,\n          onToggle: toggleComplete,\n          onDelete: deleteTodo,\n          onEdit: editTodo\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 text-sm text-slate-700 dark:text-gray-200 flex justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uD83D\\uDCCB Total: \", todos.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u2705 Completed: \", completedCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u23F3 Pending: \", pendingCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 w-full bg-gray-300 dark:bg-gray-600 h-3 rounded-full overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-green-500 h-full\",\n          style: {\n            width: `${todos.length ? completedCount / todos.length * 100 : 0}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between mt-6 flex-wrap gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            const updates = todos.map(t => ({\n              ...t,\n              completed: true\n            }));\n            setTodos(updates);\n            updates.forEach(todo => {\n              fetch(`http://localhost:8080/api/todos/${todo.id}`, {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(todo)\n              });\n            });\n          },\n          className: \"bg-green-600 text-white px-3 py-1 rounded hover:bg-green-700\",\n          children: \"Mark All Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            todos.forEach(todo => {\n              fetch(`http://localhost:8080/api/todos/${todo.id}`, {\n                method: 'DELETE'\n              });\n            });\n            setTodos([]);\n          },\n          className: \"bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600\",\n          children: \"Delete All Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoApp, \"TMVL15A+nYMqoIzbX6ZJaNHenW8=\", false, function () {\n  return [useNavigate];\n});\n_c = TodoApp;\nexport default TodoApp;\nvar _c;\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"names":["React","useState","useEffect","TodoForm","TodoItem","useNavigate","jsxDEV","_jsxDEV","TodoApp","_s","todos","setTodos","darkMode","setDarkMode","filter","setFilter","sortOrder","setSortOrder","searchText","setSearchText","navigate","user","JSON","parse","localStorage","getItem","userEmail","email","fetch","then","res","json","data","catch","err","console","error","alert","addTodo","task","newTodo","text","priority","dueDate","completed","method","headers","body","stringify","id","Date","now","toggleComplete","todo","find","t","updated","map","deleteTodo","editTodo","updatedTask","priorityValue","p","filteredTodos","matchesFilter","matchesSearch","toLowerCase","includes","sort","a","b","completedCount","length","pendingCount","handleLogout","removeItem","root","window","document","documentElement","classList","add","remove","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","placeholder","onToggle","onDelete","onEdit","style","width","updates","forEach","_c","$RefreshReg$"],"sources":["C:/Users/cheli/OneDrive/Desktop/Projects/todo-frontend/src/components/TodoApp.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import TodoForm from './TodoForm';\r\n// import TodoItem from './TodoItem';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// function TodoApp() {\r\n//   const [todos, setTodos] = useState([]);\r\n//   const [darkMode, setDarkMode] = useState(false);\r\n//   const [filter, setFilter] = useState(\"All\");\r\n//   const navigate = useNavigate();\r\n//   const user = JSON.parse(localStorage.getItem(\"user\"));\r\n//   const userEmail = user?.email;\r\n\r\n//   useEffect(() => {\r\n//     if (!userEmail) {\r\n//       navigate('/');\r\n//       return;\r\n//     }\r\n//     fetch(`http://localhost:8080/api/todos/${userEmail}`)\r\n//       .then((res) => res.json())\r\n//       .then((data) => setTodos(data))\r\n//       .catch((err) => {\r\n//         console.error('Failed to load todos:', err);\r\n//         alert('Failed to load todos.');\r\n//       });\r\n//   }, [userEmail, navigate]);\r\n\r\n//   const addTodo = (task) => {\r\n//     const newTodo = {\r\n//       text: task.text,\r\n//       priority: task.priority,\r\n//       dueDate: task.dueDate,\r\n//       completed: false,\r\n//     };\r\n\r\n//     fetch(`http://localhost:8080/api/todos/${userEmail}`, {\r\n//       method: 'POST',\r\n//       headers: { 'Content-Type': 'application/json' },\r\n//       body: JSON.stringify(newTodo),\r\n//     })\r\n//       .then((res) => res.text())\r\n//       .then(() => {\r\n//         setTodos([...todos, { ...newTodo, id: Date.now() }]);\r\n//       });\r\n//   };\r\n\r\n//   const toggleComplete = (id) => {\r\n//     const todo = todos.find((t) => t.id === id);\r\n//     const updated = { ...todo, completed: !todo.completed };\r\n\r\n//     fetch(`http://localhost:8080/api/todos/${id}`, {\r\n//       method: 'PUT',\r\n//       headers: { 'Content-Type': 'application/json' },\r\n//       body: JSON.stringify(updated),\r\n//     }).then(() =>\r\n//       setTodos(todos.map((t) => (t.id === id ? updated : t)))\r\n//     );\r\n//   };\r\n\r\n//   const deleteTodo = (id) => {\r\n//     fetch(`http://localhost:8080/api/todos/${id}`, {\r\n//       method: 'DELETE',\r\n//     }).then(() => setTodos(todos.filter((t) => t.id !== id)));\r\n//   };\r\n\r\n//   const editTodo = (id, updatedTask) => {\r\n//     const updated = { ...todos.find((t) => t.id === id), ...updatedTask };\r\n\r\n//     fetch(`http://localhost:8080/api/todos/${id}`, {\r\n//       method: 'PUT',\r\n//       headers: { 'Content-Type': 'application/json' },\r\n//       body: JSON.stringify(updated),\r\n//     }).then(() =>\r\n//       setTodos(todos.map((t) => (t.id === id ? updated : t)))\r\n//     );\r\n//   };\r\n\r\n//   const filteredTodos = todos.filter((todo) => {\r\n//     if (filter === \"Completed\") return todo.completed;\r\n//     if (filter === \"Pending\") return !todo.completed;\r\n//     return true;\r\n//   });\r\n\r\n//   const completedCount = todos.filter((t) => t.completed).length;\r\n//   const pendingCount = todos.length - completedCount;\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem('user');\r\n//     navigate('/');\r\n//   };\r\n//  useEffect(() => {\r\n//   const root = window.document.documentElement;\r\n//   if (darkMode) {\r\n//     root.classList.add('dark');\r\n//   } else {\r\n//     root.classList.remove('dark');\r\n//   }\r\n// }, [darkMode]);\r\n//   return (\r\n  \r\n\r\n//       <div className=\"min-h-screen bg-gradient-to-r from-slate-100 to-slate-200 dark:from-gray-900 dark:to-gray-800 text-black dark:text-white transition-colors\">\r\n//         <div className=\"flex justify-between items-center p-4 max-w-xl mx-auto\">\r\n//           <button\r\n//             onClick={() => setDarkMode(!darkMode)}\r\n//             className=\"text-sm text-indigo-600 hover:underline\"\r\n//           >\r\n//             {darkMode ? \"☀️ Light Mode\" : \"🌙 Dark Mode\"}\r\n//           </button>\r\n//           <button\r\n//             onClick={handleLogout}\r\n//             className=\"text-red-600 text-sm font-medium hover:underline\"\r\n//           >\r\n//             Logout\r\n//           </button>\r\n//         </div>\r\n\r\n//         <div className=\"bg-white/30 backdrop-blur-lg rounded-2xl shadow-2xl w-full max-w-xl p-6 border border-slate-300 mx-auto\">\r\n//           <h1 className=\"text-3xl font-semibold text-center text-slate-800 dark:text-white mb-6\">🚀 Project Task Manager</h1>\r\n\r\n//           <TodoForm onSubmit={addTodo} />\r\n\r\n//           <div className=\"mb-4\">\r\n//             <select\r\n//               value={filter}\r\n//               onChange={(e) => setFilter(e.target.value)}\r\n//               className=\"px-4 py-2 rounded border border-gray-400 dark:bg-gray-700\"\r\n//             >\r\n//               <option>All</option>\r\n//               <option>Completed</option>\r\n//               <option>Pending</option>\r\n//             </select>\r\n//           </div>\r\n\r\n//           <div className=\"space-y-4\">\r\n//             {filteredTodos.map((todo) => (\r\n//               <TodoItem\r\n//                 key={todo.id}\r\n//                 todo={todo}\r\n//                 onToggle={toggleComplete}\r\n//                 onDelete={deleteTodo}\r\n//                 onEdit={editTodo}\r\n//               />\r\n//             ))}\r\n//           </div>\r\n\r\n//           <div className=\"mt-6 text-sm text-slate-700 dark:text-gray-200 flex justify-between\">\r\n//             <span>📋 Total: {todos.length}</span>\r\n//             <span>✅ Completed: {completedCount}</span>\r\n//             <span>⏳ Pending: {pendingCount}</span>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n    \r\n//   );\r\n// }\r\n\r\n// export default TodoApp;\r\nimport React, { useState, useEffect } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport TodoItem from './TodoItem';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction TodoApp() {\r\n  const [todos, setTodos] = useState([]);\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [filter, setFilter] = useState(\"All\");\r\n  const [sortOrder, setSortOrder] = useState(\"none\");\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const userEmail = user?.email;\r\n\r\n  useEffect(() => {\r\n    if (!userEmail) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n    fetch(`http://localhost:8080/api/todos/${userEmail}`)\r\n      .then((res) => res.json())\r\n      .then((data) => setTodos(data))\r\n      .catch((err) => {\r\n        console.error('Failed to load todos:', err);\r\n        alert('Failed to load todos.');\r\n      });\r\n  }, [userEmail, navigate]);\r\n\r\n  const addTodo = (task) => {\r\n    const newTodo = {\r\n      text: task.text,\r\n      priority: task.priority,\r\n      dueDate: task.dueDate,\r\n      completed: false,\r\n    };\r\n\r\n    fetch(`http://localhost:8080/api/todos/${userEmail}`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(newTodo),\r\n    })\r\n      .then((res) => res.text())\r\n      .then(() => {\r\n        setTodos([...todos, { ...newTodo, id: Date.now() }]);\r\n      });\r\n  };\r\n\r\n  const toggleComplete = (id) => {\r\n    const todo = todos.find((t) => t.id === id);\r\n    const updated = { ...todo, completed: !todo.completed };\r\n\r\n    fetch(`http://localhost:8080/api/todos/${id}`, {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(updated),\r\n    }).then(() =>\r\n      setTodos(todos.map((t) => (t.id === id ? updated : t)))\r\n    );\r\n  };\r\n\r\n  const deleteTodo = (id) => {\r\n    fetch(`http://localhost:8080/api/todos/${id}`, {\r\n      method: 'DELETE',\r\n    }).then(() => setTodos(todos.filter((t) => t.id !== id)));\r\n  };\r\n\r\n  const editTodo = (id, updatedTask) => {\r\n    const updated = { ...todos.find((t) => t.id === id), ...updatedTask };\r\n\r\n    fetch(`http://localhost:8080/api/todos/${id}`, {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(updated),\r\n    }).then(() =>\r\n      setTodos(todos.map((t) => (t.id === id ? updated : t)))\r\n    );\r\n  };\r\n\r\n  const priorityValue = (p) => {\r\n    if (p === \"Low\") return 1;\r\n    if (p === \"Moderate\") return 2;\r\n    return 3; // High\r\n  };\r\n\r\n  const filteredTodos = todos\r\n    .filter((todo) => {\r\n      const matchesFilter =\r\n        filter === \"All\" ||\r\n        (filter === \"Completed\" && todo.completed) ||\r\n        (filter === \"Pending\" && !todo.completed);\r\n      const matchesSearch = todo.text.toLowerCase().includes(searchText.toLowerCase());\r\n      return matchesFilter && matchesSearch;\r\n    })\r\n    .sort((a, b) => {\r\n      if (sortOrder === \"lowToHigh\") return priorityValue(a.priority) - priorityValue(b.priority);\r\n      if (sortOrder === \"highToLow\") return priorityValue(b.priority) - priorityValue(a.priority);\r\n      return 0;\r\n    });\r\n\r\n  const completedCount = todos.filter((t) => t.completed).length;\r\n  const pendingCount = todos.length - completedCount;\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('user');\r\n    navigate('/');\r\n  };\r\n\r\n  useEffect(() => {\r\n    const root = window.document.documentElement;\r\n    if (darkMode) {\r\n      root.classList.add('dark');\r\n    } else {\r\n      root.classList.remove('dark');\r\n    }\r\n  }, [darkMode]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-r from-slate-100 to-slate-200 dark:from-gray-900 dark:to-gray-800 text-black dark:text-white transition-colors\">\r\n      <div className=\"flex justify-between items-center p-4 max-w-xl mx-auto\">\r\n        <button\r\n          onClick={() => setDarkMode(!darkMode)}\r\n          className=\"text-sm text-indigo-600 hover:underline\"\r\n        >\r\n          {darkMode ? \"☀️ Light Mode\" : \"🌙 Dark Mode\"}\r\n        </button>\r\n        <button\r\n          onClick={handleLogout}\r\n          className=\"text-red-600 text-sm font-medium hover:underline\"\r\n        >\r\n          Logout\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"bg-white/30 backdrop-blur-lg rounded-2xl shadow-2xl w-full max-w-xl p-6 border border-slate-300 mx-auto\">\r\n        <h1 className=\"text-3xl font-semibold text-center text-slate-800 dark:text-white mb-6\">🚀 To - Do List</h1>\r\n\r\n        <TodoForm onSubmit={addTodo} />\r\n\r\n        <div className=\"flex flex-wrap gap-2 items-center justify-between mb-4\">\r\n          <input\r\n            type=\"text\"\r\n            value={searchText}\r\n            onChange={(e) => setSearchText(e.target.value)}\r\n            placeholder=\"Search tasks...\"\r\n            className=\"px-3 py-2 rounded border border-gray-400 dark:bg-gray-700 dark:text-white w-full sm:w-auto\"\r\n          />\r\n\r\n          <select\r\n            value={sortOrder}\r\n            onChange={(e) => setSortOrder(e.target.value)}\r\n            className=\"px-2 py-2 rounded border border-gray-400 dark:bg-gray-700 dark:text-white\"\r\n          >\r\n            <option value=\"none\">Sort by Urgency</option>\r\n            <option value=\"lowToHigh\">Low → High</option>\r\n            <option value=\"highToLow\">High → Low</option>\r\n          </select>\r\n\r\n          <div className=\"flex gap-1\">\r\n            <button onClick={() => setFilter('All')} className=\"bg-slate-500 text-white px-3 py-1 rounded\">All</button>\r\n            <button onClick={() => setFilter('Completed')} className=\"bg-green-600 text-white px-3 py-1 rounded\">Completed</button>\r\n            <button onClick={() => setFilter('Pending')} className=\"bg-yellow-500 text-white px-3 py-1 rounded\">Pending</button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"space-y-4\">\r\n          {filteredTodos.map((todo) => (\r\n            <TodoItem\r\n              key={todo.id}\r\n              todo={todo}\r\n              onToggle={toggleComplete}\r\n              onDelete={deleteTodo}\r\n              onEdit={editTodo}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"mt-6 text-sm text-slate-700 dark:text-gray-200 flex justify-between\">\r\n          <span>📋 Total: {todos.length}</span>\r\n          <span>✅ Completed: {completedCount}</span>\r\n          <span>⏳ Pending: {pendingCount}</span>\r\n        </div>\r\n\r\n        <div className=\"mt-2 w-full bg-gray-300 dark:bg-gray-600 h-3 rounded-full overflow-hidden\">\r\n          <div className=\"bg-green-500 h-full\" style={{ width: `${todos.length ? (completedCount / todos.length) * 100 : 0}%` }}></div>\r\n        </div>\r\n\r\n        <div className=\"flex justify-between mt-6 flex-wrap gap-2\">\r\n          <button\r\n            onClick={() => {\r\n              const updates = todos.map(t => ({ ...t, completed: true }));\r\n              setTodos(updates);\r\n              updates.forEach(todo => {\r\n                fetch(`http://localhost:8080/api/todos/${todo.id}`, {\r\n                  method: 'PUT',\r\n                  headers: { 'Content-Type': 'application/json' },\r\n                  body: JSON.stringify(todo),\r\n                });\r\n              });\r\n            }}\r\n            className=\"bg-green-600 text-white px-3 py-1 rounded hover:bg-green-700\"\r\n          >\r\n            Mark All Completed\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => {\r\n              todos.forEach(todo => {\r\n                fetch(`http://localhost:8080/api/todos/${todo.id}`, {\r\n                  method: 'DELETE',\r\n                });\r\n              });\r\n              setTodos([]);\r\n            }}\r\n            className=\"bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600\"\r\n          >\r\n            Delete All Tasks\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoApp;"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,MAAM,CAAC;EAClD,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}