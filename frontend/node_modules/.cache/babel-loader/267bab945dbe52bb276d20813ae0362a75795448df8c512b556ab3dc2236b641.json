{"ast":null,"code":"// import React, { useState } from 'react';\n// import TodoForm from './TodoForm';\n// import TodoItem from './TodoItem';\n// import { useNavigate } from \"react-router-dom\";\n\n// function TodoApp() {\n//   const [todos, setTodos] = useState([]);\n\n//   const addTodo = (task) => {\n//     setTodos([\n//       ...todos,\n//       {\n//         id: Date.now(),\n//         text: task.text,\n//         priority: task.priority,\n//         completed: false,\n//       },\n//     ]);\n//   };\n//   const navigate = useNavigate();\n\n// const handleLogout = () => {\n//   localStorage.removeItem(\"user\"); // optional: clear login state\n//   navigate(\"/\"); // redirect to login page\n// };\n\n//   const toggleComplete = (id) => {\n//     setTodos(todos.map((t) =>\n//       t.id === id ? { ...t, completed: !t.completed } : t\n//     ));\n//   };\n\n//   const deleteTodo = (id) => {\n//     setTodos(todos.filter((t) => t.id !== id));\n//   };\n\n//   const editTodo = (id, updatedTask) => {\n//     setTodos(todos.map((t) =>\n//       t.id === id ? { ...t, text: updatedTask.text, priority: updatedTask.priority } : t\n//     ));\n//   };\n\n//   const completedCount = todos.filter((t) => t.completed).length;\n//   const pendingCount = todos.length - completedCount;\n\n//   return (\n//     <div className=\"min-h-screen bg-gradient-to-r from-slate-100 to-slate-200 flex flex-col items-center px-4 py-10\">\n//       <div className=\"bg-white/30 backdrop-blur-lg rounded-2xl shadow-2xl w-full max-w-xl p-6 border border-slate-300\">\n//         <h1 className=\"text-3xl font-semibold text-slate-800 mb-6 text-center\">üöÄ Project Task Manager</h1>\n//         <TodoForm onSubmit={addTodo} />\n//         <div className=\"space-y-4\">\n//           {todos.map((todo) => (\n//             <TodoItem\n//               key={todo.id}\n//               todo={todo}\n//               onToggle={toggleComplete}\n//               onDelete={deleteTodo}\n//               onEdit={editTodo}\n//             />\n//           ))}\n//         </div>\n//         <div className=\"mt-6 text-sm text-slate-700 flex justify-between\">\n//           <span>üìã Total: {todos.length}</span>\n//           <span>‚úÖ Completed: {completedCount}</span>\n//           <span>‚è≥ Pending: {pendingCount}</span>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default TodoApp;","map":{"version":3,"names":[],"sources":["C:/Users/cheli/OneDrive/Desktop/Projects/todo-frontend/src/components/TodoApp.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import TodoForm from './TodoForm';\r\n// import TodoItem from './TodoItem';\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\n// function TodoApp() {\r\n//   const [todos, setTodos] = useState([]);\r\n\r\n//   const addTodo = (task) => {\r\n//     setTodos([\r\n//       ...todos,\r\n//       {\r\n//         id: Date.now(),\r\n//         text: task.text,\r\n//         priority: task.priority,\r\n//         completed: false,\r\n//       },\r\n//     ]);\r\n//   };\r\n//   const navigate = useNavigate();\r\n\r\n// const handleLogout = () => {\r\n//   localStorage.removeItem(\"user\"); // optional: clear login state\r\n//   navigate(\"/\"); // redirect to login page\r\n// };\r\n\r\n\r\n//   const toggleComplete = (id) => {\r\n//     setTodos(todos.map((t) =>\r\n//       t.id === id ? { ...t, completed: !t.completed } : t\r\n//     ));\r\n//   };\r\n\r\n//   const deleteTodo = (id) => {\r\n//     setTodos(todos.filter((t) => t.id !== id));\r\n//   };\r\n\r\n//   const editTodo = (id, updatedTask) => {\r\n//     setTodos(todos.map((t) =>\r\n//       t.id === id ? { ...t, text: updatedTask.text, priority: updatedTask.priority } : t\r\n//     ));\r\n//   };\r\n\r\n//   const completedCount = todos.filter((t) => t.completed).length;\r\n//   const pendingCount = todos.length - completedCount;\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gradient-to-r from-slate-100 to-slate-200 flex flex-col items-center px-4 py-10\">\r\n//       <div className=\"bg-white/30 backdrop-blur-lg rounded-2xl shadow-2xl w-full max-w-xl p-6 border border-slate-300\">\r\n//         <h1 className=\"text-3xl font-semibold text-slate-800 mb-6 text-center\">üöÄ Project Task Manager</h1>\r\n//         <TodoForm onSubmit={addTodo} />\r\n//         <div className=\"space-y-4\">\r\n//           {todos.map((todo) => (\r\n//             <TodoItem\r\n//               key={todo.id}\r\n//               todo={todo}\r\n//               onToggle={toggleComplete}\r\n//               onDelete={deleteTodo}\r\n//               onEdit={editTodo}\r\n//             />\r\n//           ))}\r\n//         </div>\r\n//         <div className=\"mt-6 text-sm text-slate-700 flex justify-between\">\r\n//           <span>üìã Total: {todos.length}</span>\r\n//           <span>‚úÖ Completed: {completedCount}</span>\r\n//           <span>‚è≥ Pending: {pendingCount}</span>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default TodoApp;\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}