{"ast":null,"code":"// // import React, { useState, useEffect } from 'react';\n// // import TodoForm from './TodoForm';\n// // import TodoItem from './TodoItem';\n// // import { useNavigate } from 'react-router-dom';\n\n// // function TodoApp() {\n// //   const [todos, setTodos] = useState([]);\n// //   const [darkMode, setDarkMode] = useState(false);\n// //   const [filter, setFilter] = useState(\"All\");\n// //   const navigate = useNavigate();\n// //   const user = JSON.parse(localStorage.getItem(\"user\"));\n// //   const userEmail = user?.email;\n\n// //   useEffect(() => {\n// //     if (!userEmail) {\n// //       navigate('/');\n// //       return;\n// //     }\n// //     fetch(`http://localhost:8080/api/todos/${userEmail}`)\n// //       .then((res) => res.json())\n// //       .then((data) => setTodos(data))\n// //       .catch((err) => {\n// //         console.error('Failed to load todos:', err);\n// //         alert('Failed to load todos.');\n// //       });\n// //   }, [userEmail, navigate]);\n\n// //   const addTodo = (task) => {\n// //     const newTodo = {\n// //       text: task.text,\n// //       priority: task.priority,\n// //       dueDate: task.dueDate,\n// //       completed: false,\n// //     };\n\n// //     fetch(`http://localhost:8080/api/todos/${userEmail}`, {\n// //       method: 'POST',\n// //       headers: { 'Content-Type': 'application/json' },\n// //       body: JSON.stringify(newTodo),\n// //     })\n// //       .then((res) => res.text())\n// //       .then(() => {\n// //         setTodos([...todos, { ...newTodo, id: Date.now() }]);\n// //       });\n// //   };\n\n// //   const toggleComplete = (id) => {\n// //     const todo = todos.find((t) => t.id === id);\n// //     const updated = { ...todo, completed: !todo.completed };\n\n// //     fetch(`http://localhost:8080/api/todos/${id}`, {\n// //       method: 'PUT',\n// //       headers: { 'Content-Type': 'application/json' },\n// //       body: JSON.stringify(updated),\n// //     }).then(() =>\n// //       setTodos(todos.map((t) => (t.id === id ? updated : t)))\n// //     );\n// //   };\n\n// //   const deleteTodo = (id) => {\n// //     fetch(`http://localhost:8080/api/todos/${id}`, {\n// //       method: 'DELETE',\n// //     }).then(() => setTodos(todos.filter((t) => t.id !== id)));\n// //   };\n\n// //   const editTodo = (id, updatedTask) => {\n// //     const updated = { ...todos.find((t) => t.id === id), ...updatedTask };\n\n// //     fetch(`http://localhost:8080/api/todos/${id}`, {\n// //       method: 'PUT',\n// //       headers: { 'Content-Type': 'application/json' },\n// //       body: JSON.stringify(updated),\n// //     }).then(() =>\n// //       setTodos(todos.map((t) => (t.id === id ? updated : t)))\n// //     );\n// //   };\n\n// //   const filteredTodos = todos.filter((todo) => {\n// //     if (filter === \"Completed\") return todo.completed;\n// //     if (filter === \"Pending\") return !todo.completed;\n// //     return true;\n// //   });\n\n// //   const completedCount = todos.filter((t) => t.completed).length;\n// //   const pendingCount = todos.length - completedCount;\n\n// //   const handleLogout = () => {\n// //     localStorage.removeItem('user');\n// //     navigate('/');\n// //   };\n// //  useEffect(() => {\n// //   const root = window.document.documentElement;\n// //   if (darkMode) {\n// //     root.classList.add('dark');\n// //   } else {\n// //     root.classList.remove('dark');\n// //   }\n// // }, [darkMode]);\n// //   return (\n\n// //       <div className=\"min-h-screen bg-gradient-to-r from-slate-100 to-slate-200 dark:from-gray-900 dark:to-gray-800 text-black dark:text-white transition-colors\">\n// //         <div className=\"flex justify-between items-center p-4 max-w-xl mx-auto\">\n// //           <button\n// //             onClick={() => setDarkMode(!darkMode)}\n// //             className=\"text-sm text-indigo-600 hover:underline\"\n// //           >\n// //             {darkMode ? \"☀️ Light Mode\" : \"🌙 Dark Mode\"}\n// //           </button>\n// //           <button\n// //             onClick={handleLogout}\n// //             className=\"text-red-600 text-sm font-medium hover:underline\"\n// //           >\n// //             Logout\n// //           </button>\n// //         </div>\n\n// //         <div className=\"bg-white/30 backdrop-blur-lg rounded-2xl shadow-2xl w-full max-w-xl p-6 border border-slate-300 mx-auto\">\n// //           <h1 className=\"text-3xl font-semibold text-center text-slate-800 dark:text-white mb-6\">🚀 Project Task Manager</h1>\n\n// //           <TodoForm onSubmit={addTodo} />\n\n// //           <div className=\"mb-4\">\n// //             <select\n// //               value={filter}\n// //               onChange={(e) => setFilter(e.target.value)}\n// //               className=\"px-4 py-2 rounded border border-gray-400 dark:bg-gray-700\"\n// //             >\n// //               <option>All</option>\n// //               <option>Completed</option>\n// //               <option>Pending</option>\n// //             </select>\n// //           </div>\n\n// //           <div className=\"space-y-4\">\n// //             {filteredTodos.map((todo) => (\n// //               <TodoItem\n// //                 key={todo.id}\n// //                 todo={todo}\n// //                 onToggle={toggleComplete}\n// //                 onDelete={deleteTodo}\n// //                 onEdit={editTodo}\n// //               />\n// //             ))}\n// //           </div>\n\n// //           <div className=\"mt-6 text-sm text-slate-700 dark:text-gray-200 flex justify-between\">\n// //             <span>📋 Total: {todos.length}</span>\n// //             <span>✅ Completed: {completedCount}</span>\n// //             <span>⏳ Pending: {pendingCount}</span>\n// //           </div>\n// //         </div>\n// //       </div>\n\n// //   );\n// // }\n\n// // export default TodoApp;\n// // ✅ TodoApp.js — with Dark Mode, Search, Filter, Sort, Progress Bar","map":{"version":3,"names":[],"sources":["C:/Users/cheli/OneDrive/Desktop/Projects/todo-frontend/src/components/TodoApp.js"],"sourcesContent":["// // import React, { useState, useEffect } from 'react';\r\n// // import TodoForm from './TodoForm';\r\n// // import TodoItem from './TodoItem';\r\n// // import { useNavigate } from 'react-router-dom';\r\n\r\n// // function TodoApp() {\r\n// //   const [todos, setTodos] = useState([]);\r\n// //   const [darkMode, setDarkMode] = useState(false);\r\n// //   const [filter, setFilter] = useState(\"All\");\r\n// //   const navigate = useNavigate();\r\n// //   const user = JSON.parse(localStorage.getItem(\"user\"));\r\n// //   const userEmail = user?.email;\r\n\r\n// //   useEffect(() => {\r\n// //     if (!userEmail) {\r\n// //       navigate('/');\r\n// //       return;\r\n// //     }\r\n// //     fetch(`http://localhost:8080/api/todos/${userEmail}`)\r\n// //       .then((res) => res.json())\r\n// //       .then((data) => setTodos(data))\r\n// //       .catch((err) => {\r\n// //         console.error('Failed to load todos:', err);\r\n// //         alert('Failed to load todos.');\r\n// //       });\r\n// //   }, [userEmail, navigate]);\r\n\r\n// //   const addTodo = (task) => {\r\n// //     const newTodo = {\r\n// //       text: task.text,\r\n// //       priority: task.priority,\r\n// //       dueDate: task.dueDate,\r\n// //       completed: false,\r\n// //     };\r\n\r\n// //     fetch(`http://localhost:8080/api/todos/${userEmail}`, {\r\n// //       method: 'POST',\r\n// //       headers: { 'Content-Type': 'application/json' },\r\n// //       body: JSON.stringify(newTodo),\r\n// //     })\r\n// //       .then((res) => res.text())\r\n// //       .then(() => {\r\n// //         setTodos([...todos, { ...newTodo, id: Date.now() }]);\r\n// //       });\r\n// //   };\r\n\r\n// //   const toggleComplete = (id) => {\r\n// //     const todo = todos.find((t) => t.id === id);\r\n// //     const updated = { ...todo, completed: !todo.completed };\r\n\r\n// //     fetch(`http://localhost:8080/api/todos/${id}`, {\r\n// //       method: 'PUT',\r\n// //       headers: { 'Content-Type': 'application/json' },\r\n// //       body: JSON.stringify(updated),\r\n// //     }).then(() =>\r\n// //       setTodos(todos.map((t) => (t.id === id ? updated : t)))\r\n// //     );\r\n// //   };\r\n\r\n// //   const deleteTodo = (id) => {\r\n// //     fetch(`http://localhost:8080/api/todos/${id}`, {\r\n// //       method: 'DELETE',\r\n// //     }).then(() => setTodos(todos.filter((t) => t.id !== id)));\r\n// //   };\r\n\r\n// //   const editTodo = (id, updatedTask) => {\r\n// //     const updated = { ...todos.find((t) => t.id === id), ...updatedTask };\r\n\r\n// //     fetch(`http://localhost:8080/api/todos/${id}`, {\r\n// //       method: 'PUT',\r\n// //       headers: { 'Content-Type': 'application/json' },\r\n// //       body: JSON.stringify(updated),\r\n// //     }).then(() =>\r\n// //       setTodos(todos.map((t) => (t.id === id ? updated : t)))\r\n// //     );\r\n// //   };\r\n\r\n// //   const filteredTodos = todos.filter((todo) => {\r\n// //     if (filter === \"Completed\") return todo.completed;\r\n// //     if (filter === \"Pending\") return !todo.completed;\r\n// //     return true;\r\n// //   });\r\n\r\n// //   const completedCount = todos.filter((t) => t.completed).length;\r\n// //   const pendingCount = todos.length - completedCount;\r\n\r\n// //   const handleLogout = () => {\r\n// //     localStorage.removeItem('user');\r\n// //     navigate('/');\r\n// //   };\r\n// //  useEffect(() => {\r\n// //   const root = window.document.documentElement;\r\n// //   if (darkMode) {\r\n// //     root.classList.add('dark');\r\n// //   } else {\r\n// //     root.classList.remove('dark');\r\n// //   }\r\n// // }, [darkMode]);\r\n// //   return (\r\n  \r\n\r\n// //       <div className=\"min-h-screen bg-gradient-to-r from-slate-100 to-slate-200 dark:from-gray-900 dark:to-gray-800 text-black dark:text-white transition-colors\">\r\n// //         <div className=\"flex justify-between items-center p-4 max-w-xl mx-auto\">\r\n// //           <button\r\n// //             onClick={() => setDarkMode(!darkMode)}\r\n// //             className=\"text-sm text-indigo-600 hover:underline\"\r\n// //           >\r\n// //             {darkMode ? \"☀️ Light Mode\" : \"🌙 Dark Mode\"}\r\n// //           </button>\r\n// //           <button\r\n// //             onClick={handleLogout}\r\n// //             className=\"text-red-600 text-sm font-medium hover:underline\"\r\n// //           >\r\n// //             Logout\r\n// //           </button>\r\n// //         </div>\r\n\r\n// //         <div className=\"bg-white/30 backdrop-blur-lg rounded-2xl shadow-2xl w-full max-w-xl p-6 border border-slate-300 mx-auto\">\r\n// //           <h1 className=\"text-3xl font-semibold text-center text-slate-800 dark:text-white mb-6\">🚀 Project Task Manager</h1>\r\n\r\n// //           <TodoForm onSubmit={addTodo} />\r\n\r\n// //           <div className=\"mb-4\">\r\n// //             <select\r\n// //               value={filter}\r\n// //               onChange={(e) => setFilter(e.target.value)}\r\n// //               className=\"px-4 py-2 rounded border border-gray-400 dark:bg-gray-700\"\r\n// //             >\r\n// //               <option>All</option>\r\n// //               <option>Completed</option>\r\n// //               <option>Pending</option>\r\n// //             </select>\r\n// //           </div>\r\n\r\n// //           <div className=\"space-y-4\">\r\n// //             {filteredTodos.map((todo) => (\r\n// //               <TodoItem\r\n// //                 key={todo.id}\r\n// //                 todo={todo}\r\n// //                 onToggle={toggleComplete}\r\n// //                 onDelete={deleteTodo}\r\n// //                 onEdit={editTodo}\r\n// //               />\r\n// //             ))}\r\n// //           </div>\r\n\r\n// //           <div className=\"mt-6 text-sm text-slate-700 dark:text-gray-200 flex justify-between\">\r\n// //             <span>📋 Total: {todos.length}</span>\r\n// //             <span>✅ Completed: {completedCount}</span>\r\n// //             <span>⏳ Pending: {pendingCount}</span>\r\n// //           </div>\r\n// //         </div>\r\n// //       </div>\r\n    \r\n// //   );\r\n// // }\r\n\r\n// // export default TodoApp;\r\n// // ✅ TodoApp.js — with Dark Mode, Search, Filter, Sort, Progress Bar\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}