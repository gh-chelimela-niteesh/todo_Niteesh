{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cheli\\\\OneDrive\\\\Desktop\\\\Projects\\\\todo-frontend\\\\src\\\\components\\\\TodoApp.js\",\n  _s = $RefreshSig$();\n// // import React, { useState, useEffect } from 'react';\n// // import TodoForm from './TodoForm';\n// // import TodoItem from './TodoItem';\n// // import { useNavigate } from 'react-router-dom';\n\n// // function TodoApp() {\n// //   const [todos, setTodos] = useState([]);\n// //   const [darkMode, setDarkMode] = useState(false);\n// //   const [filter, setFilter] = useState(\"All\");\n// //   const navigate = useNavigate();\n// //   const user = JSON.parse(localStorage.getItem(\"user\"));\n// //   const userEmail = user?.email;\n\n// //   useEffect(() => {\n// //     if (!userEmail) {\n// //       navigate('/');\n// //       return;\n// //     }\n// //     fetch(`http://localhost:8080/api/todos/${userEmail}`)\n// //       .then((res) => res.json())\n// //       .then((data) => setTodos(data))\n// //       .catch((err) => {\n// //         console.error('Failed to load todos:', err);\n// //         alert('Failed to load todos.');\n// //       });\n// //   }, [userEmail, navigate]);\n\n// //   const addTodo = (task) => {\n// //     const newTodo = {\n// //       text: task.text,\n// //       priority: task.priority,\n// //       dueDate: task.dueDate,\n// //       completed: false,\n// //     };\n\n// //     fetch(`http://localhost:8080/api/todos/${userEmail}`, {\n// //       method: 'POST',\n// //       headers: { 'Content-Type': 'application/json' },\n// //       body: JSON.stringify(newTodo),\n// //     })\n// //       .then((res) => res.text())\n// //       .then(() => {\n// //         setTodos([...todos, { ...newTodo, id: Date.now() }]);\n// //       });\n// //   };\n\n// //   const toggleComplete = (id) => {\n// //     const todo = todos.find((t) => t.id === id);\n// //     const updated = { ...todo, completed: !todo.completed };\n\n// //     fetch(`http://localhost:8080/api/todos/${id}`, {\n// //       method: 'PUT',\n// //       headers: { 'Content-Type': 'application/json' },\n// //       body: JSON.stringify(updated),\n// //     }).then(() =>\n// //       setTodos(todos.map((t) => (t.id === id ? updated : t)))\n// //     );\n// //   };\n\n// //   const deleteTodo = (id) => {\n// //     fetch(`http://localhost:8080/api/todos/${id}`, {\n// //       method: 'DELETE',\n// //     }).then(() => setTodos(todos.filter((t) => t.id !== id)));\n// //   };\n\n// //   const editTodo = (id, updatedTask) => {\n// //     const updated = { ...todos.find((t) => t.id === id), ...updatedTask };\n\n// //     fetch(`http://localhost:8080/api/todos/${id}`, {\n// //       method: 'PUT',\n// //       headers: { 'Content-Type': 'application/json' },\n// //       body: JSON.stringify(updated),\n// //     }).then(() =>\n// //       setTodos(todos.map((t) => (t.id === id ? updated : t)))\n// //     );\n// //   };\n\n// //   const filteredTodos = todos.filter((todo) => {\n// //     if (filter === \"Completed\") return todo.completed;\n// //     if (filter === \"Pending\") return !todo.completed;\n// //     return true;\n// //   });\n\n// //   const completedCount = todos.filter((t) => t.completed).length;\n// //   const pendingCount = todos.length - completedCount;\n\n// //   const handleLogout = () => {\n// //     localStorage.removeItem('user');\n// //     navigate('/');\n// //   };\n// //  useEffect(() => {\n// //   const root = window.document.documentElement;\n// //   if (darkMode) {\n// //     root.classList.add('dark');\n// //   } else {\n// //     root.classList.remove('dark');\n// //   }\n// // }, [darkMode]);\n// //   return (\n\n// //       <div className=\"min-h-screen bg-gradient-to-r from-slate-100 to-slate-200 dark:from-gray-900 dark:to-gray-800 text-black dark:text-white transition-colors\">\n// //         <div className=\"flex justify-between items-center p-4 max-w-xl mx-auto\">\n// //           <button\n// //             onClick={() => setDarkMode(!darkMode)}\n// //             className=\"text-sm text-indigo-600 hover:underline\"\n// //           >\n// //             {darkMode ? \"☀️ Light Mode\" : \"🌙 Dark Mode\"}\n// //           </button>\n// //           <button\n// //             onClick={handleLogout}\n// //             className=\"text-red-600 text-sm font-medium hover:underline\"\n// //           >\n// //             Logout\n// //           </button>\n// //         </div>\n\n// //         <div className=\"bg-white/30 backdrop-blur-lg rounded-2xl shadow-2xl w-full max-w-xl p-6 border border-slate-300 mx-auto\">\n// //           <h1 className=\"text-3xl font-semibold text-center text-slate-800 dark:text-white mb-6\">🚀 Project Task Manager</h1>\n\n// //           <TodoForm onSubmit={addTodo} />\n\n// //           <div className=\"mb-4\">\n// //             <select\n// //               value={filter}\n// //               onChange={(e) => setFilter(e.target.value)}\n// //               className=\"px-4 py-2 rounded border border-gray-400 dark:bg-gray-700\"\n// //             >\n// //               <option>All</option>\n// //               <option>Completed</option>\n// //               <option>Pending</option>\n// //             </select>\n// //           </div>\n\n// //           <div className=\"space-y-4\">\n// //             {filteredTodos.map((todo) => (\n// //               <TodoItem\n// //                 key={todo.id}\n// //                 todo={todo}\n// //                 onToggle={toggleComplete}\n// //                 onDelete={deleteTodo}\n// //                 onEdit={editTodo}\n// //               />\n// //             ))}\n// //           </div>\n\n// //           <div className=\"mt-6 text-sm text-slate-700 dark:text-gray-200 flex justify-between\">\n// //             <span>📋 Total: {todos.length}</span>\n// //             <span>✅ Completed: {completedCount}</span>\n// //             <span>⏳ Pending: {pendingCount}</span>\n// //           </div>\n// //         </div>\n// //       </div>\n\n// //   );\n// // }\n\n// // export default TodoApp;\n// // ✅ TodoApp.js — with Dark Mode, Search, Filter, Sort, Progress Bar\n\n// import React, { useState, useEffect } from 'react';\n// import TodoForm from './TodoForm';\n// import TodoItem from './TodoItem';\n// import { useNavigate } from \"react-router-dom\";\n\n// function TodoApp() {\n//   const [todos, setTodos] = useState([]);\n//   const [searchText, setSearchText] = useState('');\n//   const [filter, setFilter] = useState('all');\n//   const [sortOrder, setSortOrder] = useState('none');\n//   const [darkMode, setDarkMode] = useState(() => localStorage.getItem('darkMode') === 'true');\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     localStorage.setItem('darkMode', darkMode);\n//     document.documentElement.classList.toggle('dark', darkMode);\n//   }, [darkMode]);\n\n//   const priorityValue = (p) => {\n//     if (p === 'Low') return 1;\n//     if (p === 'Moderate') return 2;\n//     return 3; // High\n//   };\n\n//   const addTodo = (task) => {\n//     setTodos([...todos, {\n//       id: Date.now(),\n//       text: task.text,\n//       priority: task.priority,\n//       dueDate: task.dueDate,\n//       completed: false,\n//     }]);\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"user\");\n//     navigate(\"/\");\n//   };\n\n//   const toggleComplete = (id) => {\n//     setTodos(todos.map((t) => t.id === id ? { ...t, completed: !t.completed } : t));\n//   };\n\n//   const deleteTodo = (id) => {\n//     setTodos(todos.filter((t) => t.id !== id));\n//   };\n\n//   const editTodo = (id, updatedTask) => {\n//     setTodos(todos.map((t) => t.id === id ? { ...t, ...updatedTask } : t));\n//   };\n\n//   const clearCompleted = () => {\n//     setTodos(todos.filter((t) => !t.completed));\n//   };\n\n//   const markAllComplete = () => {\n//     setTodos(todos.map((t) => ({ ...t, completed: true })));\n//   };\n\n//   const completedCount = todos.filter((t) => t.completed).length;\n//   const pendingCount = todos.length - completedCount;\n//   const completionPercent = todos.length > 0 ? Math.round((completedCount / todos.length) * 100) : 0;\n\n//   const filteredTodos = todos\n//     .filter(todo =>\n//       todo.text.toLowerCase().includes(searchText.toLowerCase()) &&\n//       (filter === 'all' || (filter === 'completed' && todo.completed) || (filter === 'pending' && !todo.completed))\n//     )\n//     .sort((a, b) => {\n//       if (sortOrder === 'lowToHigh') return priorityValue(a.priority) - priorityValue(b.priority);\n//       if (sortOrder === 'highToLow') return priorityValue(b.priority) - priorityValue(a.priority);\n//       return 0;\n//     });\n\n//   return (\n//     <div className=\"min-h-screen bg-gradient-to-r from-slate-100 to-slate-200 dark:from-gray-900 dark:to-gray-800 px-4 py-10 text-black dark:text-white transition-all\">\n//       <div className=\"max-w-xl mx-auto space-y-6\">\n//         <div className=\"flex justify-between items-center\">\n//           <h1 className=\"text-3xl font-bold text-center\">📝 To-Do List</h1>\n//           <button\n//             onClick={() => setDarkMode(!darkMode)}\n//             className=\"bg-slate-700 text-white px-3 py-1 rounded hover:bg-slate-600\"\n//           >\n//             {darkMode ? '☀ Light' : '🌙 Dark'}\n//           </button>\n//         </div>\n\n//         <TodoForm onSubmit={addTodo} />\n\n//         <div className=\"flex flex-wrap gap-2 items-center justify-between\">\n//           <input\n//             type=\"text\"\n//             value={searchText}\n//             onChange={(e) => setSearchText(e.target.value)}\n//             placeholder=\"Search tasks...\"\n//             className=\"px-3 py-2 rounded border w-full sm:w-auto text-black\"\n//           />\n//           <div className=\"flex gap-1\">\n//             <button onClick={() => setFilter('all')} className=\"btn\">All</button>\n//             <button onClick={() => setFilter('completed')} className=\"btn\">Completed</button>\n//             <button onClick={() => setFilter('pending')} className=\"btn\">Pending</button>\n//           </div>\n//           <select\n//             value={sortOrder}\n//             onChange={(e) => setSortOrder(e.target.value)}\n//             className=\"px-2 py-1 rounded border text-black\"\n//           >\n//             <option value=\"none\">Sort Priority</option>\n//             <option value=\"lowToHigh\">Low → High</option>\n//             <option value=\"highToLow\">High → Low</option>\n//           </select>\n//         </div>\n\n//         <div className=\"space-y-4\">\n//           {filteredTodos.map((todo) => (\n//             <TodoItem\n//               key={todo.id}\n//               todo={todo}\n//               onToggle={toggleComplete}\n//               onDelete={deleteTodo}\n//               onEdit={editTodo}\n//             />\n//           ))}\n//         </div>\n\n//         <div className=\"flex justify-between mt-4 text-sm\">\n//           <span>📋 Total: {todos.length}</span>\n//           <span>✅ Completed: {completedCount}</span>\n//           <span>⏳ Pending: {pendingCount}</span>\n//         </div>\n\n//         <div className=\"mt-4 w-full bg-gray-300 dark:bg-gray-600 h-3 rounded-full overflow-hidden\">\n//           <div className=\"bg-green-500 h-full\" style={{ width: `${completionPercent}%` }}></div>\n//         </div>\n\n//         <div className=\"flex justify-between mt-4\">\n//           <button onClick={markAllComplete} className=\"bg-green-600 text-white px-3 py-1 rounded hover:bg-green-700\">\n//             Mark All Complete\n//           </button>\n//           <button onClick={clearCompleted} className=\"bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600\">\n//             Clear Completed\n//           </button>\n//           <button onClick={handleLogout} className=\"bg-gray-500 text-white px-3 py-1 rounded hover:bg-gray-600\">\n//             Logout\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default TodoApp;\nimport React, { useState, useEffect } from 'react';\nimport TodoForm from './TodoForm';\nimport TodoItem from './TodoItem';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoApp() {\n  _s();\n  const [todos, setTodos] = useState(() => {\n    const saved = localStorage.getItem(\"todos\");\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [searchText, setSearchText] = useState('');\n  const [filter, setFilter] = useState('all');\n  const [sortOrder, setSortOrder] = useState('none');\n  const [darkMode, setDarkMode] = useState(() => localStorage.getItem('darkMode') === 'true');\n  const navigate = useNavigate();\n\n  // Handle dark mode toggle\n  useEffect(() => {\n    localStorage.setItem('darkMode', darkMode);\n    document.documentElement.classList.toggle('dark', darkMode);\n  }, [darkMode]);\n\n  // Save todos to localStorage\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n  const priorityValue = p => {\n    if (p === 'Low') return 1;\n    if (p === 'Moderate') return 2;\n    return 3; // High\n  };\n  const addTodo = task => {\n    setTodos([...todos, {\n      id: Date.now(),\n      text: task.text,\n      priority: task.priority,\n      dueDate: task.dueDate,\n      completed: false\n    }]);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem(\"user\");\n    navigate(\"/\");\n  };\n  const toggleComplete = id => {\n    setTodos(todos.map(t => t.id === id ? {\n      ...t,\n      completed: !t.completed\n    } : t));\n  };\n  const deleteTodo = id => {\n    setTodos(todos.filter(t => t.id !== id));\n  };\n  const editTodo = (id, updatedTask) => {\n    setTodos(todos.map(t => t.id === id ? {\n      ...t,\n      ...updatedTask\n    } : t));\n  };\n  const clearCompleted = () => {\n    setTodos(todos.filter(t => !t.completed));\n  };\n  const markAllComplete = () => {\n    setTodos(todos.map(t => ({\n      ...t,\n      completed: true\n    })));\n  };\n  const completedCount = todos.filter(t => t.completed).length;\n  const pendingCount = todos.length - completedCount;\n  const completionPercent = todos.length > 0 ? Math.round(completedCount / todos.length * 100) : 0;\n  const filteredTodos = todos.filter(todo => todo.text.toLowerCase().includes(searchText.toLowerCase()) && (filter === 'all' || filter === 'completed' && todo.completed || filter === 'pending' && !todo.completed)).sort((a, b) => {\n    if (sortOrder === 'lowToHigh') return priorityValue(a.priority) - priorityValue(b.priority);\n    if (sortOrder === 'highToLow') return priorityValue(b.priority) - priorityValue(a.priority);\n    return 0;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-r from-slate-100 to-slate-200 dark:from-gray-900 dark:to-gray-800 px-4 py-10 text-black dark:text-white transition-all\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-xl mx-auto space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold text-center\",\n          children: \"\\uD83D\\uDCDD To-Do List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setDarkMode(!darkMode),\n          className: \"bg-slate-700 text-white px-3 py-1 rounded hover:bg-slate-600\",\n          children: darkMode ? '☀ Light' : '🌙 Dark'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n        onSubmit: addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-2 items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchText,\n          onChange: e => setSearchText(e.target.value),\n          placeholder: \"Search tasks...\",\n          className: \"px-3 py-2 rounded border w-full sm:w-auto text-black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setFilter('all'),\n            className: `px-3 py-1 rounded-md text-white bg-indigo-600 hover:bg-indigo-700 transition duration-200`,\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setFilter('completed'),\n            className: `px-3 py-1 rounded-md text-white bg-green-600 hover:bg-green-700 transition duration-200`,\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setFilter('pending'),\n            className: `px-3 py-1 rounded-md text-white bg-yellow-500 hover:bg-yellow-600 transition duration-200`,\n            children: \"Pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: sortOrder,\n          onChange: e => setSortOrder(e.target.value),\n          className: \"px-2 py-1 rounded border text-black\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"none\",\n            children: \"Sort Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"lowToHigh\",\n            children: \"Low \\u2192 High\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"highToLow\",\n            children: \"High \\u2192 Low\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: filteredTodos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n          todo: todo,\n          onToggle: toggleComplete,\n          onDelete: deleteTodo,\n          onEdit: editTodo\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between mt-4 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uD83D\\uDCCB Total: \", todos.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u2705 Completed: \", completedCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u23F3 Pending: \", pendingCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 w-full bg-gray-300 dark:bg-gray-600 h-3 rounded-full overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-green-500 h-full\",\n          style: {\n            width: `${completionPercent}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: markAllComplete,\n          className: \"bg-green-600 text-white px-3 py-1 rounded hover:bg-green-700\",\n          children: \"Mark All Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearCompleted,\n          className: \"bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600\",\n          children: \"Clear Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"bg-gray-500 text-white px-3 py-1 rounded hover:bg-gray-600\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 397,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoApp, \"vu970CDDDcNdc0u2uvDNI+nL9q4=\", false, function () {\n  return [useNavigate];\n});\n_c = TodoApp;\nexport default TodoApp;\nvar _c;\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"names":["React","useState","useEffect","TodoForm","TodoItem","useNavigate","jsxDEV","_jsxDEV","TodoApp","_s","todos","setTodos","saved","localStorage","getItem","JSON","parse","searchText","setSearchText","filter","setFilter","sortOrder","setSortOrder","darkMode","setDarkMode","navigate","setItem","document","documentElement","classList","toggle","stringify","priorityValue","p","addTodo","task","id","Date","now","text","priority","dueDate","completed","handleLogout","removeItem","toggleComplete","map","t","deleteTodo","editTodo","updatedTask","clearCompleted","markAllComplete","completedCount","length","pendingCount","completionPercent","Math","round","filteredTodos","todo","toLowerCase","includes","sort","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","value","onChange","e","target","placeholder","onToggle","onDelete","onEdit","style","width","_c","$RefreshReg$"],"sources":["C:/Users/cheli/OneDrive/Desktop/Projects/todo-frontend/src/components/TodoApp.js"],"sourcesContent":["// // import React, { useState, useEffect } from 'react';\r\n// // import TodoForm from './TodoForm';\r\n// // import TodoItem from './TodoItem';\r\n// // import { useNavigate } from 'react-router-dom';\r\n\r\n// // function TodoApp() {\r\n// //   const [todos, setTodos] = useState([]);\r\n// //   const [darkMode, setDarkMode] = useState(false);\r\n// //   const [filter, setFilter] = useState(\"All\");\r\n// //   const navigate = useNavigate();\r\n// //   const user = JSON.parse(localStorage.getItem(\"user\"));\r\n// //   const userEmail = user?.email;\r\n\r\n// //   useEffect(() => {\r\n// //     if (!userEmail) {\r\n// //       navigate('/');\r\n// //       return;\r\n// //     }\r\n// //     fetch(`http://localhost:8080/api/todos/${userEmail}`)\r\n// //       .then((res) => res.json())\r\n// //       .then((data) => setTodos(data))\r\n// //       .catch((err) => {\r\n// //         console.error('Failed to load todos:', err);\r\n// //         alert('Failed to load todos.');\r\n// //       });\r\n// //   }, [userEmail, navigate]);\r\n\r\n// //   const addTodo = (task) => {\r\n// //     const newTodo = {\r\n// //       text: task.text,\r\n// //       priority: task.priority,\r\n// //       dueDate: task.dueDate,\r\n// //       completed: false,\r\n// //     };\r\n\r\n// //     fetch(`http://localhost:8080/api/todos/${userEmail}`, {\r\n// //       method: 'POST',\r\n// //       headers: { 'Content-Type': 'application/json' },\r\n// //       body: JSON.stringify(newTodo),\r\n// //     })\r\n// //       .then((res) => res.text())\r\n// //       .then(() => {\r\n// //         setTodos([...todos, { ...newTodo, id: Date.now() }]);\r\n// //       });\r\n// //   };\r\n\r\n// //   const toggleComplete = (id) => {\r\n// //     const todo = todos.find((t) => t.id === id);\r\n// //     const updated = { ...todo, completed: !todo.completed };\r\n\r\n// //     fetch(`http://localhost:8080/api/todos/${id}`, {\r\n// //       method: 'PUT',\r\n// //       headers: { 'Content-Type': 'application/json' },\r\n// //       body: JSON.stringify(updated),\r\n// //     }).then(() =>\r\n// //       setTodos(todos.map((t) => (t.id === id ? updated : t)))\r\n// //     );\r\n// //   };\r\n\r\n// //   const deleteTodo = (id) => {\r\n// //     fetch(`http://localhost:8080/api/todos/${id}`, {\r\n// //       method: 'DELETE',\r\n// //     }).then(() => setTodos(todos.filter((t) => t.id !== id)));\r\n// //   };\r\n\r\n// //   const editTodo = (id, updatedTask) => {\r\n// //     const updated = { ...todos.find((t) => t.id === id), ...updatedTask };\r\n\r\n// //     fetch(`http://localhost:8080/api/todos/${id}`, {\r\n// //       method: 'PUT',\r\n// //       headers: { 'Content-Type': 'application/json' },\r\n// //       body: JSON.stringify(updated),\r\n// //     }).then(() =>\r\n// //       setTodos(todos.map((t) => (t.id === id ? updated : t)))\r\n// //     );\r\n// //   };\r\n\r\n// //   const filteredTodos = todos.filter((todo) => {\r\n// //     if (filter === \"Completed\") return todo.completed;\r\n// //     if (filter === \"Pending\") return !todo.completed;\r\n// //     return true;\r\n// //   });\r\n\r\n// //   const completedCount = todos.filter((t) => t.completed).length;\r\n// //   const pendingCount = todos.length - completedCount;\r\n\r\n// //   const handleLogout = () => {\r\n// //     localStorage.removeItem('user');\r\n// //     navigate('/');\r\n// //   };\r\n// //  useEffect(() => {\r\n// //   const root = window.document.documentElement;\r\n// //   if (darkMode) {\r\n// //     root.classList.add('dark');\r\n// //   } else {\r\n// //     root.classList.remove('dark');\r\n// //   }\r\n// // }, [darkMode]);\r\n// //   return (\r\n  \r\n\r\n// //       <div className=\"min-h-screen bg-gradient-to-r from-slate-100 to-slate-200 dark:from-gray-900 dark:to-gray-800 text-black dark:text-white transition-colors\">\r\n// //         <div className=\"flex justify-between items-center p-4 max-w-xl mx-auto\">\r\n// //           <button\r\n// //             onClick={() => setDarkMode(!darkMode)}\r\n// //             className=\"text-sm text-indigo-600 hover:underline\"\r\n// //           >\r\n// //             {darkMode ? \"☀️ Light Mode\" : \"🌙 Dark Mode\"}\r\n// //           </button>\r\n// //           <button\r\n// //             onClick={handleLogout}\r\n// //             className=\"text-red-600 text-sm font-medium hover:underline\"\r\n// //           >\r\n// //             Logout\r\n// //           </button>\r\n// //         </div>\r\n\r\n// //         <div className=\"bg-white/30 backdrop-blur-lg rounded-2xl shadow-2xl w-full max-w-xl p-6 border border-slate-300 mx-auto\">\r\n// //           <h1 className=\"text-3xl font-semibold text-center text-slate-800 dark:text-white mb-6\">🚀 Project Task Manager</h1>\r\n\r\n// //           <TodoForm onSubmit={addTodo} />\r\n\r\n// //           <div className=\"mb-4\">\r\n// //             <select\r\n// //               value={filter}\r\n// //               onChange={(e) => setFilter(e.target.value)}\r\n// //               className=\"px-4 py-2 rounded border border-gray-400 dark:bg-gray-700\"\r\n// //             >\r\n// //               <option>All</option>\r\n// //               <option>Completed</option>\r\n// //               <option>Pending</option>\r\n// //             </select>\r\n// //           </div>\r\n\r\n// //           <div className=\"space-y-4\">\r\n// //             {filteredTodos.map((todo) => (\r\n// //               <TodoItem\r\n// //                 key={todo.id}\r\n// //                 todo={todo}\r\n// //                 onToggle={toggleComplete}\r\n// //                 onDelete={deleteTodo}\r\n// //                 onEdit={editTodo}\r\n// //               />\r\n// //             ))}\r\n// //           </div>\r\n\r\n// //           <div className=\"mt-6 text-sm text-slate-700 dark:text-gray-200 flex justify-between\">\r\n// //             <span>📋 Total: {todos.length}</span>\r\n// //             <span>✅ Completed: {completedCount}</span>\r\n// //             <span>⏳ Pending: {pendingCount}</span>\r\n// //           </div>\r\n// //         </div>\r\n// //       </div>\r\n    \r\n// //   );\r\n// // }\r\n\r\n// // export default TodoApp;\r\n// // ✅ TodoApp.js — with Dark Mode, Search, Filter, Sort, Progress Bar\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import TodoForm from './TodoForm';\r\n// import TodoItem from './TodoItem';\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// function TodoApp() {\r\n//   const [todos, setTodos] = useState([]);\r\n//   const [searchText, setSearchText] = useState('');\r\n//   const [filter, setFilter] = useState('all');\r\n//   const [sortOrder, setSortOrder] = useState('none');\r\n//   const [darkMode, setDarkMode] = useState(() => localStorage.getItem('darkMode') === 'true');\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     localStorage.setItem('darkMode', darkMode);\r\n//     document.documentElement.classList.toggle('dark', darkMode);\r\n//   }, [darkMode]);\r\n\r\n//   const priorityValue = (p) => {\r\n//     if (p === 'Low') return 1;\r\n//     if (p === 'Moderate') return 2;\r\n//     return 3; // High\r\n//   };\r\n\r\n//   const addTodo = (task) => {\r\n//     setTodos([...todos, {\r\n//       id: Date.now(),\r\n//       text: task.text,\r\n//       priority: task.priority,\r\n//       dueDate: task.dueDate,\r\n//       completed: false,\r\n//     }]);\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem(\"user\");\r\n//     navigate(\"/\");\r\n//   };\r\n\r\n//   const toggleComplete = (id) => {\r\n//     setTodos(todos.map((t) => t.id === id ? { ...t, completed: !t.completed } : t));\r\n//   };\r\n\r\n//   const deleteTodo = (id) => {\r\n//     setTodos(todos.filter((t) => t.id !== id));\r\n//   };\r\n\r\n//   const editTodo = (id, updatedTask) => {\r\n//     setTodos(todos.map((t) => t.id === id ? { ...t, ...updatedTask } : t));\r\n//   };\r\n\r\n//   const clearCompleted = () => {\r\n//     setTodos(todos.filter((t) => !t.completed));\r\n//   };\r\n\r\n//   const markAllComplete = () => {\r\n//     setTodos(todos.map((t) => ({ ...t, completed: true })));\r\n//   };\r\n\r\n//   const completedCount = todos.filter((t) => t.completed).length;\r\n//   const pendingCount = todos.length - completedCount;\r\n//   const completionPercent = todos.length > 0 ? Math.round((completedCount / todos.length) * 100) : 0;\r\n\r\n//   const filteredTodos = todos\r\n//     .filter(todo =>\r\n//       todo.text.toLowerCase().includes(searchText.toLowerCase()) &&\r\n//       (filter === 'all' || (filter === 'completed' && todo.completed) || (filter === 'pending' && !todo.completed))\r\n//     )\r\n//     .sort((a, b) => {\r\n//       if (sortOrder === 'lowToHigh') return priorityValue(a.priority) - priorityValue(b.priority);\r\n//       if (sortOrder === 'highToLow') return priorityValue(b.priority) - priorityValue(a.priority);\r\n//       return 0;\r\n//     });\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gradient-to-r from-slate-100 to-slate-200 dark:from-gray-900 dark:to-gray-800 px-4 py-10 text-black dark:text-white transition-all\">\r\n//       <div className=\"max-w-xl mx-auto space-y-6\">\r\n//         <div className=\"flex justify-between items-center\">\r\n//           <h1 className=\"text-3xl font-bold text-center\">📝 To-Do List</h1>\r\n//           <button\r\n//             onClick={() => setDarkMode(!darkMode)}\r\n//             className=\"bg-slate-700 text-white px-3 py-1 rounded hover:bg-slate-600\"\r\n//           >\r\n//             {darkMode ? '☀ Light' : '🌙 Dark'}\r\n//           </button>\r\n//         </div>\r\n\r\n//         <TodoForm onSubmit={addTodo} />\r\n\r\n//         <div className=\"flex flex-wrap gap-2 items-center justify-between\">\r\n//           <input\r\n//             type=\"text\"\r\n//             value={searchText}\r\n//             onChange={(e) => setSearchText(e.target.value)}\r\n//             placeholder=\"Search tasks...\"\r\n//             className=\"px-3 py-2 rounded border w-full sm:w-auto text-black\"\r\n//           />\r\n//           <div className=\"flex gap-1\">\r\n//             <button onClick={() => setFilter('all')} className=\"btn\">All</button>\r\n//             <button onClick={() => setFilter('completed')} className=\"btn\">Completed</button>\r\n//             <button onClick={() => setFilter('pending')} className=\"btn\">Pending</button>\r\n//           </div>\r\n//           <select\r\n//             value={sortOrder}\r\n//             onChange={(e) => setSortOrder(e.target.value)}\r\n//             className=\"px-2 py-1 rounded border text-black\"\r\n//           >\r\n//             <option value=\"none\">Sort Priority</option>\r\n//             <option value=\"lowToHigh\">Low → High</option>\r\n//             <option value=\"highToLow\">High → Low</option>\r\n//           </select>\r\n//         </div>\r\n\r\n//         <div className=\"space-y-4\">\r\n//           {filteredTodos.map((todo) => (\r\n//             <TodoItem\r\n//               key={todo.id}\r\n//               todo={todo}\r\n//               onToggle={toggleComplete}\r\n//               onDelete={deleteTodo}\r\n//               onEdit={editTodo}\r\n//             />\r\n//           ))}\r\n//         </div>\r\n\r\n//         <div className=\"flex justify-between mt-4 text-sm\">\r\n//           <span>📋 Total: {todos.length}</span>\r\n//           <span>✅ Completed: {completedCount}</span>\r\n//           <span>⏳ Pending: {pendingCount}</span>\r\n//         </div>\r\n\r\n//         <div className=\"mt-4 w-full bg-gray-300 dark:bg-gray-600 h-3 rounded-full overflow-hidden\">\r\n//           <div className=\"bg-green-500 h-full\" style={{ width: `${completionPercent}%` }}></div>\r\n//         </div>\r\n\r\n//         <div className=\"flex justify-between mt-4\">\r\n//           <button onClick={markAllComplete} className=\"bg-green-600 text-white px-3 py-1 rounded hover:bg-green-700\">\r\n//             Mark All Complete\r\n//           </button>\r\n//           <button onClick={clearCompleted} className=\"bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600\">\r\n//             Clear Completed\r\n//           </button>\r\n//           <button onClick={handleLogout} className=\"bg-gray-500 text-white px-3 py-1 rounded hover:bg-gray-600\">\r\n//             Logout\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default TodoApp;\r\nimport React, { useState, useEffect } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport TodoItem from './TodoItem';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction TodoApp() {\r\n  const [todos, setTodos] = useState(() => {\r\n    const saved = localStorage.getItem(\"todos\");\r\n    return saved ? JSON.parse(saved) : [];\r\n  });\r\n  const [searchText, setSearchText] = useState('');\r\n  const [filter, setFilter] = useState('all');\r\n  const [sortOrder, setSortOrder] = useState('none');\r\n  const [darkMode, setDarkMode] = useState(() => localStorage.getItem('darkMode') === 'true');\r\n  const navigate = useNavigate();\r\n\r\n  // Handle dark mode toggle\r\n  useEffect(() => {\r\n    localStorage.setItem('darkMode', darkMode);\r\n    document.documentElement.classList.toggle('dark', darkMode);\r\n  }, [darkMode]);\r\n\r\n  // Save todos to localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem('todos', JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  const priorityValue = (p) => {\r\n    if (p === 'Low') return 1;\r\n    if (p === 'Moderate') return 2;\r\n    return 3; // High\r\n  };\r\n\r\n  const addTodo = (task) => {\r\n    setTodos([...todos, {\r\n      id: Date.now(),\r\n      text: task.text,\r\n      priority: task.priority,\r\n      dueDate: task.dueDate,\r\n      completed: false,\r\n    }]);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"user\");\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const toggleComplete = (id) => {\r\n    setTodos(todos.map((t) => t.id === id ? { ...t, completed: !t.completed } : t));\r\n  };\r\n\r\n  const deleteTodo = (id) => {\r\n    setTodos(todos.filter((t) => t.id !== id));\r\n  };\r\n\r\n  const editTodo = (id, updatedTask) => {\r\n    setTodos(todos.map((t) => t.id === id ? { ...t, ...updatedTask } : t));\r\n  };\r\n\r\n  const clearCompleted = () => {\r\n    setTodos(todos.filter((t) => !t.completed));\r\n  };\r\n\r\n  const markAllComplete = () => {\r\n    setTodos(todos.map((t) => ({ ...t, completed: true })));\r\n  };\r\n\r\n  const completedCount = todos.filter((t) => t.completed).length;\r\n  const pendingCount = todos.length - completedCount;\r\n  const completionPercent = todos.length > 0 ? Math.round((completedCount / todos.length) * 100) : 0;\r\n\r\n  const filteredTodos = todos\r\n    .filter(todo =>\r\n      todo.text.toLowerCase().includes(searchText.toLowerCase()) &&\r\n      (filter === 'all' || (filter === 'completed' && todo.completed) || (filter === 'pending' && !todo.completed))\r\n    )\r\n    .sort((a, b) => {\r\n      if (sortOrder === 'lowToHigh') return priorityValue(a.priority) - priorityValue(b.priority);\r\n      if (sortOrder === 'highToLow') return priorityValue(b.priority) - priorityValue(a.priority);\r\n      return 0;\r\n    });\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-r from-slate-100 to-slate-200 dark:from-gray-900 dark:to-gray-800 px-4 py-10 text-black dark:text-white transition-all\">\r\n      <div className=\"max-w-xl mx-auto space-y-6\">\r\n        <div className=\"flex justify-between items-center\">\r\n          <h1 className=\"text-3xl font-bold text-center\">📝 To-Do List</h1>\r\n          <button\r\n            onClick={() => setDarkMode(!darkMode)}\r\n            className=\"bg-slate-700 text-white px-3 py-1 rounded hover:bg-slate-600\"\r\n          >\r\n            {darkMode ? '☀ Light' : '🌙 Dark'}\r\n          </button>\r\n        </div>\r\n\r\n        <TodoForm onSubmit={addTodo} />\r\n\r\n        <div className=\"flex flex-wrap gap-2 items-center justify-between\">\r\n          <input\r\n            type=\"text\"\r\n            value={searchText}\r\n            onChange={(e) => setSearchText(e.target.value)}\r\n            placeholder=\"Search tasks...\"\r\n            className=\"px-3 py-2 rounded border w-full sm:w-auto text-black\"\r\n          />\r\n          <div className=\"flex gap-2\">\r\n  <button\r\n    onClick={() => setFilter('all')}\r\n    className={`px-3 py-1 rounded-md text-white bg-indigo-600 hover:bg-indigo-700 transition duration-200`}\r\n  >\r\n    All\r\n  </button>\r\n  <button\r\n    onClick={() => setFilter('completed')}\r\n    className={`px-3 py-1 rounded-md text-white bg-green-600 hover:bg-green-700 transition duration-200`}\r\n  >\r\n    Completed\r\n  </button>\r\n  <button\r\n    onClick={() => setFilter('pending')}\r\n    className={`px-3 py-1 rounded-md text-white bg-yellow-500 hover:bg-yellow-600 transition duration-200`}\r\n  >\r\n    Pending\r\n  </button>\r\n</div>\r\n\r\n          <select\r\n            value={sortOrder}\r\n            onChange={(e) => setSortOrder(e.target.value)}\r\n            className=\"px-2 py-1 rounded border text-black\"\r\n          >\r\n            <option value=\"none\">Sort Priority</option>\r\n            <option value=\"lowToHigh\">Low → High</option>\r\n            <option value=\"highToLow\">High → Low</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"space-y-4\">\r\n          {filteredTodos.map((todo) => (\r\n            <TodoItem\r\n              key={todo.id}\r\n              todo={todo}\r\n              onToggle={toggleComplete}\r\n              onDelete={deleteTodo}\r\n              onEdit={editTodo}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"flex justify-between mt-4 text-sm\">\r\n          <span>📋 Total: {todos.length}</span>\r\n          <span>✅ Completed: {completedCount}</span>\r\n          <span>⏳ Pending: {pendingCount}</span>\r\n        </div>\r\n\r\n        <div className=\"mt-4 w-full bg-gray-300 dark:bg-gray-600 h-3 rounded-full overflow-hidden\">\r\n          <div className=\"bg-green-500 h-full\" style={{ width: `${completionPercent}%` }}></div>\r\n        </div>\r\n\r\n        <div className=\"flex justify-between mt-4\">\r\n          <button onClick={markAllComplete} className=\"bg-green-600 text-white px-3 py-1 rounded hover:bg-green-700\">\r\n            Mark All Complete\r\n          </button>\r\n          <button onClick={clearCompleted} className=\"bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600\">\r\n            Clear Completed\r\n          </button>\r\n          <button onClick={handleLogout} className=\"bg-gray-500 text-white px-3 py-1 rounded hover:bg-gray-600\">\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoApp;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}