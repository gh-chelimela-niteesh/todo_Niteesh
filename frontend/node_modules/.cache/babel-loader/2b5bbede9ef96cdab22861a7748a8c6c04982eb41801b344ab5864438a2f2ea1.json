{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cheli\\\\OneDrive\\\\Desktop\\\\Projects\\\\todo-frontend\\\\src\\\\components\\\\TodoApp.js\",\n  _s = $RefreshSig$();\n// // import React, { useState } from 'react';\n// // import TodoForm from './TodoForm';\n// // import TodoItem from './TodoItem';\n// // import { useNavigate } from \"react-router-dom\";\n\n// // function TodoApp() {\n// //   const [todos, setTodos] = useState([]);\n\n// //   const addTodo = (task) => {\n// //     setTodos([\n// //       ...todos,\n// //       {\n// //         id: Date.now(),\n// //         text: task.text,\n// //         priority: task.priority,\n// //         completed: false,\n// //       },\n// //     ]);\n// //   };\n// //   const navigate = useNavigate();\n\n// // const handleLogout = () => {\n// //   localStorage.removeItem(\"user\"); // optional: clear login state\n// //   navigate(\"/\"); // redirect to login page\n// // };\n\n// //   const toggleComplete = (id) => {\n// //     setTodos(todos.map((t) =>\n// //       t.id === id ? { ...t, completed: !t.completed } : t\n// //     ));\n// //   };\n\n// //   const deleteTodo = (id) => {\n// //     setTodos(todos.filter((t) => t.id !== id));\n// //   };\n\n// //   const editTodo = (id, updatedTask) => {\n// //     setTodos(todos.map((t) =>\n// //       t.id === id ? { ...t, text: updatedTask.text, priority: updatedTask.priority } : t\n// //     ));\n// //   };\n\n// //   const completedCount = todos.filter((t) => t.completed).length;\n// //   const pendingCount = todos.length - completedCount;\n\n// //   return (\n// //     <div className=\"min-h-screen bg-gradient-to-r from-slate-100 to-slate-200 flex flex-col items-center px-4 py-10\">\n// //       <div className=\"bg-white/30 backdrop-blur-lg rounded-2xl shadow-2xl w-full max-w-xl p-6 border border-slate-300\">\n// //         <h1 className=\"text-3xl font-semibold text-slate-800 mb-6 text-center\">🚀 Project Task Manager</h1>\n// //         <TodoForm onSubmit={addTodo} />\n// //         <div className=\"space-y-4\">\n// //           {todos.map((todo) => (\n// //             <TodoItem\n// //               key={todo.id}\n// //               todo={todo}\n// //               onToggle={toggleComplete}\n// //               onDelete={deleteTodo}\n// //               onEdit={editTodo}\n// //             />\n// //           ))}\n// //         </div>\n// //         <div className=\"mt-6 text-sm text-slate-700 flex justify-between\">\n// //           <span>📋 Total: {todos.length}</span>\n// //           <span>✅ Completed: {completedCount}</span>\n// //           <span>⏳ Pending: {pendingCount}</span>\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n// // export default TodoApp;\n\n// import React, { useState, useEffect } from 'react';\n// import TodoForm from './TodoForm';\n// import TodoItem from './TodoItem';\n// import { useNavigate } from 'react-router-dom';\n\n// function TodoApp() {\n//   const [todos, setTodos] = useState([]);\n//   const navigate = useNavigate();\n//   const user = JSON.parse(localStorage.getItem(\"user\"));\n//   const userEmail = user?.email;\n\n//   // 🟡 Load todos on mount\n//   useEffect(() => {\n//     if (!userEmail) {\n//       navigate('/');\n//       return;\n//     }\n//     fetch(`http://localhost:8080/api/todos/${userEmail}`)\n//       .then((res) => res.json())\n//       .then((data) => setTodos(data))\n//       .catch((err) => {\n//         console.error('Failed to load todos:', err);\n//         alert('Failed to load todos.');\n//       });\n//   }, [userEmail, navigate]);\n\n//   // ✅ Add todo\n//   const addTodo = (task) => {\n//     const newTodo = {\n//       text: task.text,\n//       priority: task.priority,\n//       completed: false,\n//     };\n\n//     fetch(`http://localhost:8080/api/todos/${userEmail}`, {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify(newTodo),\n//     })\n//       .then((res) => res.text())\n//       .then(() => {\n//         // Refresh list\n//         setTodos([...todos, { ...newTodo, id: Date.now() }]); // temp id\n//       });\n//   };\n\n//   // ✅ Toggle complete\n//   const toggleComplete = (id) => {\n//     const todo = todos.find((t) => t.id === id);\n//     const updated = { ...todo, completed: !todo.completed };\n\n//     fetch(`http://localhost:8080/api/todos/${id}`, {\n//       method: 'PUT',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify(updated),\n//     }).then(() =>\n//       setTodos(todos.map((t) => (t.id === id ? updated : t)))\n//     );\n//   };\n\n//   // ✅ Delete todo\n//   const deleteTodo = (id) => {\n//     fetch(`http://localhost:8080/api/todos/${id}`, {\n//       method: 'DELETE',\n//     }).then(() => setTodos(todos.filter((t) => t.id !== id)));\n//   };\n\n//   // ✅ Edit todo\n//   const editTodo = (id, updatedTask) => {\n//     const updated = { ...todos.find((t) => t.id === id), ...updatedTask };\n\n//     fetch(`http://localhost:8080/api/todos/${id}`, {\n//       method: 'PUT',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify(updated),\n//     }).then(() =>\n//       setTodos(todos.map((t) => (t.id === id ? updated : t)))\n//     );\n//   };\n\n//   const completedCount = todos.filter((t) => t.completed).length;\n//   const pendingCount = todos.length - completedCount;\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('user');\n//     navigate('/');\n//   };\n\n//   return (\n//     <div className=\"min-h-screen bg-gradient-to-r from-slate-100 to-slate-200 flex flex-col items-center px-4 py-10\">\n//       <div className=\"bg-white/30 backdrop-blur-lg rounded-2xl shadow-2xl w-full max-w-xl p-6 border border-slate-300\">\n//         <div className=\"flex justify-between items-center mb-6\">\n//           <h1 className=\"text-3xl font-semibold text-slate-800 text-center w-full\">🚀 Project Task Manager</h1>\n//           <button onClick={handleLogout} className=\"text-red-600 text-sm font-medium hover:underline absolute top-6 right-8\">\n//             Logout\n//           </button>\n//         </div>\n//         <TodoForm onSubmit={addTodo} />\n//         <div className=\"space-y-4\">\n//           {todos.map((todo) => (\n//             <TodoItem\n//               key={todo.id}\n//               todo={todo}\n//               onToggle={toggleComplete}\n//               onDelete={deleteTodo}\n//               onEdit={editTodo}\n//             />\n//           ))}\n//         </div>\n//         <div className=\"mt-6 text-sm text-slate-700 flex justify-between\">\n//           <span>📋 Total: {todos.length}</span>\n//           <span>✅ Completed: {completedCount}</span>\n//           <span>⏳ Pending: {pendingCount}</span>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default TodoApp;\nimport React, { useState, useEffect } from 'react';\nimport TodoForm from './TodoForm';\nimport TodoItem from './TodoItem';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoApp() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [darkMode, setDarkMode] = useState(false);\n  const [filter, setFilter] = useState(\"All\");\n  const navigate = useNavigate();\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const userEmail = user === null || user === void 0 ? void 0 : user.email;\n  useEffect(() => {\n    if (!userEmail) {\n      navigate('/');\n      return;\n    }\n    fetch(`http://localhost:8080/api/todos/${userEmail}`).then(res => res.json()).then(data => setTodos(data)).catch(err => {\n      console.error('Failed to load todos:', err);\n      alert('Failed to load todos.');\n    });\n  }, [userEmail, navigate]);\n  const addTodo = task => {\n    const newTodo = {\n      text: task.text,\n      priority: task.priority,\n      dueDate: task.dueDate,\n      completed: false\n    };\n    fetch(`http://localhost:8080/api/todos/${userEmail}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newTodo)\n    }).then(res => res.text()).then(() => {\n      setTodos([...todos, {\n        ...newTodo,\n        id: Date.now()\n      }]);\n    });\n  };\n  const toggleComplete = id => {\n    const todo = todos.find(t => t.id === id);\n    const updated = {\n      ...todo,\n      completed: !todo.completed\n    };\n    fetch(`http://localhost:8080/api/todos/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updated)\n    }).then(() => setTodos(todos.map(t => t.id === id ? updated : t)));\n  };\n  const deleteTodo = id => {\n    fetch(`http://localhost:8080/api/todos/${id}`, {\n      method: 'DELETE'\n    }).then(() => setTodos(todos.filter(t => t.id !== id)));\n  };\n  const editTodo = (id, updatedTask) => {\n    const updated = {\n      ...todos.find(t => t.id === id),\n      ...updatedTask\n    };\n    fetch(`http://localhost:8080/api/todos/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updated)\n    }).then(() => setTodos(todos.map(t => t.id === id ? updated : t)));\n  };\n  const filteredTodos = todos.filter(todo => {\n    if (filter === \"Completed\") return todo.completed;\n    if (filter === \"Pending\") return !todo.completed;\n    return true;\n  });\n  const completedCount = todos.filter(t => t.completed).length;\n  const pendingCount = todos.length - completedCount;\n  const handleLogout = () => {\n    localStorage.removeItem('user');\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: darkMode ? \"dark\" : \"\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gradient-to-r from-slate-100 to-slate-200 dark:from-gray-900 dark:to-gray-800 text-black dark:text-white transition-colors\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center p-4 max-w-xl mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setDarkMode(!darkMode),\n          className: \"text-sm text-indigo-600 hover:underline\",\n          children: darkMode ? \"☀️ Light Mode\" : \"🌙 Dark Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"text-red-600 text-sm font-medium hover:underline\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white/30 backdrop-blur-lg rounded-2xl shadow-2xl w-full max-w-xl p-6 border border-slate-300 mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-semibold text-center text-slate-800 dark:text-white mb-6\",\n          children: \"\\uD83D\\uDE80 Project Task Manager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n          onSubmit: addTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: filter,\n            onChange: e => setFilter(e.target.value),\n            className: \"px-4 py-2 rounded border border-gray-400 dark:bg-gray-700\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Pending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: filteredTodos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n            todo: todo,\n            onToggle: toggleComplete,\n            onDelete: deleteTodo,\n            onEdit: editTodo\n          }, todo.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6 text-sm text-slate-700 dark:text-gray-200 flex justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\uD83D\\uDCCB Total: \", todos.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u2705 Completed: \", completedCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u23F3 Pending: \", pendingCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoApp, \"1zdgPFmPehBDMZvFTVrgd0Cajn4=\", false, function () {\n  return [useNavigate];\n});\n_c = TodoApp;\nexport default TodoApp;\nvar _c;\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"names":["React","useState","useEffect","TodoForm","TodoItem","useNavigate","jsxDEV","_jsxDEV","TodoApp","_s","todos","setTodos","darkMode","setDarkMode","filter","setFilter","navigate","user","JSON","parse","localStorage","getItem","userEmail","email","fetch","then","res","json","data","catch","err","console","error","alert","addTodo","task","newTodo","text","priority","dueDate","completed","method","headers","body","stringify","id","Date","now","toggleComplete","todo","find","t","updated","map","deleteTodo","editTodo","updatedTask","filteredTodos","completedCount","length","pendingCount","handleLogout","removeItem","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","e","target","onToggle","onDelete","onEdit","_c","$RefreshReg$"],"sources":["C:/Users/cheli/OneDrive/Desktop/Projects/todo-frontend/src/components/TodoApp.js"],"sourcesContent":["// // import React, { useState } from 'react';\r\n// // import TodoForm from './TodoForm';\r\n// // import TodoItem from './TodoItem';\r\n// // import { useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\n// // function TodoApp() {\r\n// //   const [todos, setTodos] = useState([]);\r\n\r\n// //   const addTodo = (task) => {\r\n// //     setTodos([\r\n// //       ...todos,\r\n// //       {\r\n// //         id: Date.now(),\r\n// //         text: task.text,\r\n// //         priority: task.priority,\r\n// //         completed: false,\r\n// //       },\r\n// //     ]);\r\n// //   };\r\n// //   const navigate = useNavigate();\r\n\r\n// // const handleLogout = () => {\r\n// //   localStorage.removeItem(\"user\"); // optional: clear login state\r\n// //   navigate(\"/\"); // redirect to login page\r\n// // };\r\n\r\n\r\n// //   const toggleComplete = (id) => {\r\n// //     setTodos(todos.map((t) =>\r\n// //       t.id === id ? { ...t, completed: !t.completed } : t\r\n// //     ));\r\n// //   };\r\n\r\n// //   const deleteTodo = (id) => {\r\n// //     setTodos(todos.filter((t) => t.id !== id));\r\n// //   };\r\n\r\n// //   const editTodo = (id, updatedTask) => {\r\n// //     setTodos(todos.map((t) =>\r\n// //       t.id === id ? { ...t, text: updatedTask.text, priority: updatedTask.priority } : t\r\n// //     ));\r\n// //   };\r\n\r\n// //   const completedCount = todos.filter((t) => t.completed).length;\r\n// //   const pendingCount = todos.length - completedCount;\r\n\r\n// //   return (\r\n// //     <div className=\"min-h-screen bg-gradient-to-r from-slate-100 to-slate-200 flex flex-col items-center px-4 py-10\">\r\n// //       <div className=\"bg-white/30 backdrop-blur-lg rounded-2xl shadow-2xl w-full max-w-xl p-6 border border-slate-300\">\r\n// //         <h1 className=\"text-3xl font-semibold text-slate-800 mb-6 text-center\">🚀 Project Task Manager</h1>\r\n// //         <TodoForm onSubmit={addTodo} />\r\n// //         <div className=\"space-y-4\">\r\n// //           {todos.map((todo) => (\r\n// //             <TodoItem\r\n// //               key={todo.id}\r\n// //               todo={todo}\r\n// //               onToggle={toggleComplete}\r\n// //               onDelete={deleteTodo}\r\n// //               onEdit={editTodo}\r\n// //             />\r\n// //           ))}\r\n// //         </div>\r\n// //         <div className=\"mt-6 text-sm text-slate-700 flex justify-between\">\r\n// //           <span>📋 Total: {todos.length}</span>\r\n// //           <span>✅ Completed: {completedCount}</span>\r\n// //           <span>⏳ Pending: {pendingCount}</span>\r\n// //         </div>\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n// // export default TodoApp;\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import TodoForm from './TodoForm';\r\n// import TodoItem from './TodoItem';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// function TodoApp() {\r\n//   const [todos, setTodos] = useState([]);\r\n//   const navigate = useNavigate();\r\n//   const user = JSON.parse(localStorage.getItem(\"user\"));\r\n//   const userEmail = user?.email;\r\n\r\n//   // 🟡 Load todos on mount\r\n//   useEffect(() => {\r\n//     if (!userEmail) {\r\n//       navigate('/');\r\n//       return;\r\n//     }\r\n//     fetch(`http://localhost:8080/api/todos/${userEmail}`)\r\n//       .then((res) => res.json())\r\n//       .then((data) => setTodos(data))\r\n//       .catch((err) => {\r\n//         console.error('Failed to load todos:', err);\r\n//         alert('Failed to load todos.');\r\n//       });\r\n//   }, [userEmail, navigate]);\r\n\r\n//   // ✅ Add todo\r\n//   const addTodo = (task) => {\r\n//     const newTodo = {\r\n//       text: task.text,\r\n//       priority: task.priority,\r\n//       completed: false,\r\n//     };\r\n\r\n//     fetch(`http://localhost:8080/api/todos/${userEmail}`, {\r\n//       method: 'POST',\r\n//       headers: { 'Content-Type': 'application/json' },\r\n//       body: JSON.stringify(newTodo),\r\n//     })\r\n//       .then((res) => res.text())\r\n//       .then(() => {\r\n//         // Refresh list\r\n//         setTodos([...todos, { ...newTodo, id: Date.now() }]); // temp id\r\n//       });\r\n//   };\r\n\r\n//   // ✅ Toggle complete\r\n//   const toggleComplete = (id) => {\r\n//     const todo = todos.find((t) => t.id === id);\r\n//     const updated = { ...todo, completed: !todo.completed };\r\n\r\n//     fetch(`http://localhost:8080/api/todos/${id}`, {\r\n//       method: 'PUT',\r\n//       headers: { 'Content-Type': 'application/json' },\r\n//       body: JSON.stringify(updated),\r\n//     }).then(() =>\r\n//       setTodos(todos.map((t) => (t.id === id ? updated : t)))\r\n//     );\r\n//   };\r\n\r\n//   // ✅ Delete todo\r\n//   const deleteTodo = (id) => {\r\n//     fetch(`http://localhost:8080/api/todos/${id}`, {\r\n//       method: 'DELETE',\r\n//     }).then(() => setTodos(todos.filter((t) => t.id !== id)));\r\n//   };\r\n\r\n//   // ✅ Edit todo\r\n//   const editTodo = (id, updatedTask) => {\r\n//     const updated = { ...todos.find((t) => t.id === id), ...updatedTask };\r\n\r\n//     fetch(`http://localhost:8080/api/todos/${id}`, {\r\n//       method: 'PUT',\r\n//       headers: { 'Content-Type': 'application/json' },\r\n//       body: JSON.stringify(updated),\r\n//     }).then(() =>\r\n//       setTodos(todos.map((t) => (t.id === id ? updated : t)))\r\n//     );\r\n//   };\r\n\r\n//   const completedCount = todos.filter((t) => t.completed).length;\r\n//   const pendingCount = todos.length - completedCount;\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem('user');\r\n//     navigate('/');\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gradient-to-r from-slate-100 to-slate-200 flex flex-col items-center px-4 py-10\">\r\n//       <div className=\"bg-white/30 backdrop-blur-lg rounded-2xl shadow-2xl w-full max-w-xl p-6 border border-slate-300\">\r\n//         <div className=\"flex justify-between items-center mb-6\">\r\n//           <h1 className=\"text-3xl font-semibold text-slate-800 text-center w-full\">🚀 Project Task Manager</h1>\r\n//           <button onClick={handleLogout} className=\"text-red-600 text-sm font-medium hover:underline absolute top-6 right-8\">\r\n//             Logout\r\n//           </button>\r\n//         </div>\r\n//         <TodoForm onSubmit={addTodo} />\r\n//         <div className=\"space-y-4\">\r\n//           {todos.map((todo) => (\r\n//             <TodoItem\r\n//               key={todo.id}\r\n//               todo={todo}\r\n//               onToggle={toggleComplete}\r\n//               onDelete={deleteTodo}\r\n//               onEdit={editTodo}\r\n//             />\r\n//           ))}\r\n//         </div>\r\n//         <div className=\"mt-6 text-sm text-slate-700 flex justify-between\">\r\n//           <span>📋 Total: {todos.length}</span>\r\n//           <span>✅ Completed: {completedCount}</span>\r\n//           <span>⏳ Pending: {pendingCount}</span>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default TodoApp;\r\nimport React, { useState, useEffect } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport TodoItem from './TodoItem';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction TodoApp() {\r\n  const [todos, setTodos] = useState([]);\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [filter, setFilter] = useState(\"All\");\r\n  const navigate = useNavigate();\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const userEmail = user?.email;\r\n\r\n  useEffect(() => {\r\n    if (!userEmail) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n    fetch(`http://localhost:8080/api/todos/${userEmail}`)\r\n      .then((res) => res.json())\r\n      .then((data) => setTodos(data))\r\n      .catch((err) => {\r\n        console.error('Failed to load todos:', err);\r\n        alert('Failed to load todos.');\r\n      });\r\n  }, [userEmail, navigate]);\r\n\r\n  const addTodo = (task) => {\r\n    const newTodo = {\r\n      text: task.text,\r\n      priority: task.priority,\r\n      dueDate: task.dueDate,\r\n      completed: false,\r\n    };\r\n\r\n    fetch(`http://localhost:8080/api/todos/${userEmail}`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(newTodo),\r\n    })\r\n      .then((res) => res.text())\r\n      .then(() => {\r\n        setTodos([...todos, { ...newTodo, id: Date.now() }]);\r\n      });\r\n  };\r\n\r\n  const toggleComplete = (id) => {\r\n    const todo = todos.find((t) => t.id === id);\r\n    const updated = { ...todo, completed: !todo.completed };\r\n\r\n    fetch(`http://localhost:8080/api/todos/${id}`, {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(updated),\r\n    }).then(() =>\r\n      setTodos(todos.map((t) => (t.id === id ? updated : t)))\r\n    );\r\n  };\r\n\r\n  const deleteTodo = (id) => {\r\n    fetch(`http://localhost:8080/api/todos/${id}`, {\r\n      method: 'DELETE',\r\n    }).then(() => setTodos(todos.filter((t) => t.id !== id)));\r\n  };\r\n\r\n  const editTodo = (id, updatedTask) => {\r\n    const updated = { ...todos.find((t) => t.id === id), ...updatedTask };\r\n\r\n    fetch(`http://localhost:8080/api/todos/${id}`, {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(updated),\r\n    }).then(() =>\r\n      setTodos(todos.map((t) => (t.id === id ? updated : t)))\r\n    );\r\n  };\r\n\r\n  const filteredTodos = todos.filter((todo) => {\r\n    if (filter === \"Completed\") return todo.completed;\r\n    if (filter === \"Pending\") return !todo.completed;\r\n    return true;\r\n  });\r\n\r\n  const completedCount = todos.filter((t) => t.completed).length;\r\n  const pendingCount = todos.length - completedCount;\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('user');\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <div className={darkMode ? \"dark\" : \"\"}>\r\n      <div className=\"min-h-screen bg-gradient-to-r from-slate-100 to-slate-200 dark:from-gray-900 dark:to-gray-800 text-black dark:text-white transition-colors\">\r\n        <div className=\"flex justify-between items-center p-4 max-w-xl mx-auto\">\r\n          <button\r\n            onClick={() => setDarkMode(!darkMode)}\r\n            className=\"text-sm text-indigo-600 hover:underline\"\r\n          >\r\n            {darkMode ? \"☀️ Light Mode\" : \"🌙 Dark Mode\"}\r\n          </button>\r\n          <button\r\n            onClick={handleLogout}\r\n            className=\"text-red-600 text-sm font-medium hover:underline\"\r\n          >\r\n            Logout\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"bg-white/30 backdrop-blur-lg rounded-2xl shadow-2xl w-full max-w-xl p-6 border border-slate-300 mx-auto\">\r\n          <h1 className=\"text-3xl font-semibold text-center text-slate-800 dark:text-white mb-6\">🚀 Project Task Manager</h1>\r\n\r\n          <TodoForm onSubmit={addTodo} />\r\n\r\n          <div className=\"mb-4\">\r\n            <select\r\n              value={filter}\r\n              onChange={(e) => setFilter(e.target.value)}\r\n              className=\"px-4 py-2 rounded border border-gray-400 dark:bg-gray-700\"\r\n            >\r\n              <option>All</option>\r\n              <option>Completed</option>\r\n              <option>Pending</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"space-y-4\">\r\n            {filteredTodos.map((todo) => (\r\n              <TodoItem\r\n                key={todo.id}\r\n                todo={todo}\r\n                onToggle={toggleComplete}\r\n                onDelete={deleteTodo}\r\n                onEdit={editTodo}\r\n              />\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"mt-6 text-sm text-slate-700 dark:text-gray-200 flex justify-between\">\r\n            <span>📋 Total: {todos.length}</span>\r\n            <span>✅ Completed: {completedCount}</span>\r\n            <span>⏳ Pending: {pendingCount}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoApp;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}